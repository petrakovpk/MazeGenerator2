{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/Canvas.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { MapObject, PlacingObject } from '@/app/page';\nimport { Stage, Layer, Image as KonvaImage, Transformer, Group, Rect } from 'react-konva';\nimport useImage from 'use-image';\nimport { v4 as uuidv4 } from 'uuid';\nimport Konva from 'konva';\nimport { data } from '@/lib/data';\n\ninterface MapObjectComponentProps {\n  shapeProps: MapObject;\n  isSelected: boolean;\n  onSelect: () => void;\n  onChange: (newAttrs: Partial<MapObject>) => void;\n  keepAspectRatio: boolean;\n}\n\nconst MapObjectComponent: React.FC<MapObjectComponentProps> = ({ shapeProps, isSelected, onSelect, onChange, keepAspectRatio }) => {\n  const shapeRef = useRef<Konva.Image>(null);\n  const trRef = useRef<Konva.Transformer>(null);\n  const [image] = useImage(shapeProps.image, 'anonymous');\n\n  useEffect(() => {\n    if (isSelected) {\n      trRef.current?.nodes([shapeRef.current!]);\n      trRef.current?.getLayer()?.batchDraw();\n    }\n  }, [isSelected]);\n\n  const handleDragEnd = (e: Konva.KonvaEventObject<DragEvent>) => {\n    onChange({ ...shapeProps, x: e.target.x(), y: e.target.y() });\n  };\n\n  const handleTransformEnd = () => {\n    const node = shapeRef.current;\n    if (node) {\n      const scaleX = node.scaleX();\n      const scaleY = node.scaleY();\n      \n      node.scaleX(shapeProps.flipX ? -1 : 1);\n      node.scaleY(shapeProps.flipY ? -1 : 1);\n\n      onChange({\n        ...shapeProps,\n        x: node.x(),\n        y: node.y(),\n        width: Math.max(5, node.width() * Math.abs(scaleX)),\n        height: Math.max(5, node.height() * Math.abs(scaleY)),\n      });\n    }\n  };\n\n  return (\n    <>\n      <KonvaImage\n        ref={shapeRef}\n        image={image}\n        x={shapeProps.x}\n        y={shapeProps.y}\n        width={shapeProps.width}\n        height={shapeProps.height}\n        draggable={!shapeProps.isLocked}\n        onClick={onSelect}\n        onTap={onSelect}\n        onDragEnd={handleDragEnd}\n        onTransformEnd={handleTransformEnd}\n        scaleX={shapeProps.flipX ? -1 : 1}\n        scaleY={shapeProps.flipY ? -1 : 1}\n        offsetX={shapeProps.flipX ? shapeProps.width : 0}\n        offsetY={shapeProps.flipY ? shapeProps.height : 0}\n      />\n      {isSelected && (\n        <Transformer\n          ref={trRef}\n          boundBoxFunc={(oldBox, newBox) => {\n            if (keepAspectRatio) {\n              const aspectRatio = oldBox.width / oldBox.height;\n              newBox.width = newBox.height * aspectRatio;\n            }\n            if (newBox.width < 5 || newBox.height < 5) {\n              return oldBox;\n            }\n            return newBox;\n          }}\n        />\n      )}\n    </>\n  );\n};\n\ninterface CanvasProps {\n  mapObjects: MapObject[];\n  setMapObjects: (objects: MapObject[]) => void;\n  selectedObject: MapObject | null;\n  setSelectedObject: (object: MapObject | null) => void;\n  canvasSize: { width: number; height: number };\n  placingObject: PlacingObject | null;\n  setPlacingObject: (object: PlacingObject | null) => void;\n  keepAspectRatio: boolean;\n  onUpdateObject: (object: Partial<MapObject>) => void;\n}\n\nconst Canvas: React.FC<CanvasProps> = ({\n  mapObjects,\n  setMapObjects,\n  selectedObject,\n  setSelectedObject,\n  canvasSize,\n  placingObject,\n  setPlacingObject,\n  keepAspectRatio,\n  onUpdateObject,\n}) => {\n  const [mousePos, setMousePos] = useState<{ x: number; y: number } | null>(null);\n  const stageRef = useRef<Konva.Stage>(null);\n  const groupRef = useRef<Konva.Group>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [containerSize, setContainerSize] = useState({ width: 800, height: 600 });\n  const PADDING = 100;\n\n  useEffect(() => {\n    const updateSize = () => {\n      if (containerRef.current) {\n        const { clientWidth, clientHeight } = containerRef.current;\n        setContainerSize({ width: clientWidth, height: clientHeight });\n      }\n    };\n\n    updateSize();\n    const resizeObserver = new ResizeObserver(updateSize);\n    if (containerRef.current) {\n      resizeObserver.observe(containerRef.current);\n    }\n\n    return () => resizeObserver.disconnect();\n  }, []);\n\n  const getRelativePointerPosition = (node: Konva.Node | null) => {\n    if (!node) return null;\n    const transform = node.getAbsoluteTransform().copy();\n    transform.invert();\n    const pos = node.getStage()?.getPointerPosition();\n    if (!pos) return null;\n    return transform.point(pos);\n  };\n  \n  const handleStageClick = (e: Konva.KonvaEventObject<MouseEvent>) => {\n    if (placingObject && groupRef.current) {\n      const pos = getRelativePointerPosition(groupRef.current);\n      if (!pos) return;\n      \n      if (placingObject.name === 'random_fruit') {\n        const newObject: MapObject = {\n          id: uuidv4(),\n          name: 'Случайный фрукт',\n          image: placingObject.image,\n          x: pos.x - placingObject.width / 2,\n          y: pos.y - placingObject.height / 2,\n          width: placingObject.width,\n          height: placingObject.height,\n          originalWidth: placingObject.originalWidth,\n          originalHeight: placingObject.originalHeight,\n          flipX: false,\n          flipY: false,\n          isLocked: false,\n        };\n        setMapObjects([...mapObjects, newObject]);\n        setPlacingObject(null);\n      } else {\n        const newObject: MapObject = {\n          id: uuidv4(),\n          ...placingObject,\n          x: pos.x - placingObject.width / 2,\n          y: pos.y - placingObject.height / 2,\n          flipX: false,\n          flipY: false,\n          isLocked: false,\n        };\n        setMapObjects([...mapObjects, newObject]);\n        setPlacingObject(null);\n      }\n      return;\n    }\n\n    if (e.target === e.target.getStage() || e.target.name() === 'level-background') {\n      setSelectedObject(null);\n    }\n  };\n  \n  const handleMouseMove = (e: Konva.KonvaEventObject<MouseEvent>) => {\n    if (placingObject && groupRef.current) {\n      const pos = getRelativePointerPosition(groupRef.current);\n      if (pos) {\n        setMousePos(pos);\n      }\n    }\n  };\n  \n  const handleMouseLeave = () => {\n    setMousePos(null);\n  };\n  \n  const [previewImage] = useImage(placingObject?.image || '', 'anonymous');\n\n  // Вычисляем позицию для центрирования карты\n  const stageWidth = Math.max(containerSize.width, canvasSize.width + PADDING * 2);\n  const stageHeight = Math.max(containerSize.height, canvasSize.height + PADDING * 2);\n  const offsetX = Math.max(PADDING, (containerSize.width - canvasSize.width) / 2);\n  const offsetY = Math.max(PADDING, (containerSize.height - canvasSize.height) / 2);\n\n  return (\n    <div ref={containerRef} className=\"w-full h-full\">\n      <Stage\n        ref={stageRef}\n        width={containerSize.width}\n        height={containerSize.height}\n        onClick={handleStageClick}\n        onMouseMove={handleMouseMove}\n        onMouseLeave={handleMouseLeave}\n        className=\"bg-gray-100\"\n      >\n        <Layer>\n          <Group ref={groupRef} x={offsetX} y={offsetY}>\n          <Rect\n            name=\"level-background\"\n            width={canvasSize.width}\n            height={canvasSize.height}\n            fill=\"white\"\n            shadowBlur={10}\n            shadowOpacity={0.2}\n          />\n          {mapObjects.map((obj) => (\n            <MapObjectComponent\n              key={obj.id}\n              shapeProps={obj}\n              isSelected={selectedObject?.id === obj.id}\n              onSelect={() => {\n                if (placingObject) return;\n                if (!obj.isLocked) {\n                  setSelectedObject(obj);\n                }\n              }}\n              onChange={onUpdateObject}\n              keepAspectRatio={keepAspectRatio}\n            />\n          ))}\n          {mousePos && placingObject && (\n            <KonvaImage\n              image={previewImage}\n              x={mousePos.x - placingObject.width / 2}\n              y={mousePos.y - placingObject.height / 2}\n              width={placingObject.width}\n              height={placingObject.height}\n              opacity={0.6}\n              listening={false}\n            />\n          )}\n        </Group>\n      </Layer>\n    </Stage>\n    </div>\n  );\n};\n\nexport default Canvas;\n"],"names":[],"mappings":"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","debugId":null}}]
}
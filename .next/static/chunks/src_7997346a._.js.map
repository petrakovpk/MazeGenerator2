{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/Toolbar.tsx"],"sourcesContent":["import { Pointer, Map, Save, PanelRightOpen, PanelRightClose, RotateCcw } from 'lucide-react';\n\nexport type Tool = 'pointer' | 'placing' | 'map';\n\ninterface ToolbarProps {\n  activeTool: Tool;\n  onToolSelect: (tool: Tool) => void;\n  onSave: () => void;\n  isSaving: boolean;\n  isRightPanelVisible: boolean;\n  onToggleRightPanel: () => void;\n  onResetRightPanel: () => void;\n}\n\nconst Toolbar = ({ \n  activeTool, \n  onToolSelect, \n  onSave, \n  isSaving, \n  isRightPanelVisible, \n  onToggleRightPanel,\n  onResetRightPanel \n}: ToolbarProps) => (\n  <div className=\"navbar bg-base-100 shadow-sm border-b\">\n    <div className=\"navbar-start\">\n      <div className=\"btn-group\">\n        <button\n          className={`btn btn-sm ${activeTool === 'pointer' ? 'btn-primary' : 'btn-ghost'}`}\n          onClick={() => onToolSelect('pointer')}\n          data-tip=\"Указатель (выбор и перемещение объектов)\"\n        >\n          <Pointer className=\"h-4 w-4\" />\n        </button>\n      </div>\n    </div>\n    \n    <div className=\"navbar-end\">\n      <div className=\"btn-group\">\n        <button\n          className={`btn btn-sm ${activeTool === 'map' ? 'btn-primary' : 'btn-ghost'}`}\n          onClick={() => onToolSelect('map')}\n          data-tip=\"Редактор карты\"\n        >\n          <Map className=\"h-4 w-4\" />\n        </button>\n        \n        <div className=\"divider divider-horizontal mx-1\"></div>\n        \n        <button\n          className=\"btn btn-sm btn-ghost\"\n          onClick={onToggleRightPanel}\n          data-tip={isRightPanelVisible ? \"Скрыть правую панель\" : \"Показать правую панель\"}\n        >\n          {isRightPanelVisible ? <PanelRightClose className=\"h-4 w-4\" /> : <PanelRightOpen className=\"h-4 w-4\" />}\n        </button>\n        \n        <button\n          className=\"btn btn-sm btn-ghost\"\n          onClick={onResetRightPanel}\n          data-tip=\"Сбросить размер правой панели\"\n        >\n          <RotateCcw className=\"h-4 w-4\" />\n        </button>\n        \n        <div className=\"divider divider-horizontal mx-1\"></div>\n        \n        <button\n          className=\"btn btn-sm btn-ghost\"\n          onClick={onSave}\n          disabled={isSaving}\n          data-tip={isSaving ? \"Сохранение...\" : \"Сохранить уровень\"}\n        >\n          <Save className=\"h-4 w-4\" />\n        </button>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Toolbar;\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAcA,MAAM,UAAU,CAAC,EACf,UAAU,EACV,YAAY,EACZ,MAAM,EACN,QAAQ,EACR,mBAAmB,EACnB,kBAAkB,EAClB,iBAAiB,EACJ,iBACb,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBACC,WAAW,CAAC,WAAW,EAAE,eAAe,YAAY,gBAAgB,aAAa;wBACjF,SAAS,IAAM,aAAa;wBAC5B,YAAS;kCAET,cAAA,6LAAC,2MAAA,CAAA,UAAO;4BAAC,WAAU;;;;;;;;;;;;;;;;;;;;;0BAKzB,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,WAAW,CAAC,WAAW,EAAE,eAAe,QAAQ,gBAAgB,aAAa;4BAC7E,SAAS,IAAM,aAAa;4BAC5B,YAAS;sCAET,cAAA,6LAAC,mMAAA,CAAA,MAAG;gCAAC,WAAU;;;;;;;;;;;sCAGjB,6LAAC;4BAAI,WAAU;;;;;;sCAEf,6LAAC;4BACC,WAAU;4BACV,SAAS;4BACT,YAAU,sBAAsB,yBAAyB;sCAExD,oCAAsB,6LAAC,mOAAA,CAAA,kBAAe;gCAAC,WAAU;;;;;qDAAe,6LAAC,iOAAA,CAAA,iBAAc;gCAAC,WAAU;;;;;;;;;;;sCAG7F,6LAAC;4BACC,WAAU;4BACV,SAAS;4BACT,YAAS;sCAET,cAAA,6LAAC,mNAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;;;;;;sCAGvB,6LAAC;4BAAI,WAAU;;;;;;sCAEf,6LAAC;4BACC,WAAU;4BACV,SAAS;4BACT,UAAU;4BACV,YAAU,WAAW,kBAAkB;sCAEvC,cAAA,6LAAC,qMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA1DpB;uCAiES","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/lib/data.ts"],"sourcesContent":["export const objectCategories = {\n    islands: \"Остров\",\n    start: \"Старт\",\n    fruits: \"Фрукты\",\n    stones: \"Камни\",\n    water: \"Вода\",\n    trees: \"Деревья\",\n    finish: \"Финиш\",\n    extra: \"Экстра\",\n};\n\nexport const data = {\n    islands: [\n        { name: \"Остров 1\", image: \"/assets/islands/island_1.png\" },\n        { name: \"Остров 2\", image: \"/assets/islands/island_2.png\" },\n        { name: \"Остров 3\", image: \"/assets/islands/island_3.png\" },\n    ],\n    start: [\n        { name: \"Корова\", image: \"/assets/hero/hero_cow.png\" },\n        { name: \"Кот\", image: \"/assets/hero/hero_cat.png\" },\n    ],\n    fruits: [\n        { name: \"Яблоко\", image: \"/assets/fruits/apple.png\" },\n        { name: \"Банан\", image: \"/assets/fruits/banana.png\" },\n        { name: \"Ягода\", image: \"/assets/fruits/berry.png\" },\n        { name: \"Капуста\", image: \"/assets/fruits/cabbage.png\" },\n        { name: \"Морковь\", image: \"/assets/fruits/carrot.png\" },\n        { name: \"Виноград\", image: \"/assets/fruits/grape.png\" },\n    ],\n    stones: [\n        { name: \"Камень 1\", image: \"/assets/stones/stone_1.png\" },\n        { name: \"Камень 2\", image: \"/assets/stones/stone_2.png\" },\n        { name: \"Камень 3\", image: \"/assets/stones/stone_3.png\" },\n    ],\n    water: [\n        { name: \"Вода 1\", image: \"/assets/water/water_1.png\" },\n        { name: \"Вода 2\", image: \"/assets/water/water_2.png\" },\n        { name: \"Вода 3\", image: \"/assets/water/water_3.png\" },\n        { name: \"Вода 4\", image: \"/assets/water/water_4.png\" },\n    ],\n    trees: [\n        { name: \"Дерево 1\", image: \"/assets/trees/tree_1.png\" },\n        { name: \"Дерево 2\", image: \"/assets/trees/tree_2.png\" },\n        { name: \"Дерево 3\", image: \"/assets/trees/tree_3.png\" },\n        { name: \"Дерево 4\", image: \"/assets/trees/tree_4.png\" },\n    ],\n    finish: [{ name: \"Финиш 1\", image: \"/assets/finish/finish_1.png\" }],\n    extra: [{ name: \"Экстра 1\", image: \"/assets/extra/extra_1.png\" }],\n}; "],"names":[],"mappings":";;;;AAAO,MAAM,mBAAmB;IAC5B,SAAS;IACT,OAAO;IACP,QAAQ;IACR,QAAQ;IACR,OAAO;IACP,OAAO;IACP,QAAQ;IACR,OAAO;AACX;AAEO,MAAM,OAAO;IAChB,SAAS;QACL;YAAE,MAAM;YAAY,OAAO;QAA+B;QAC1D;YAAE,MAAM;YAAY,OAAO;QAA+B;QAC1D;YAAE,MAAM;YAAY,OAAO;QAA+B;KAC7D;IACD,OAAO;QACH;YAAE,MAAM;YAAU,OAAO;QAA4B;QACrD;YAAE,MAAM;YAAO,OAAO;QAA4B;KACrD;IACD,QAAQ;QACJ;YAAE,MAAM;YAAU,OAAO;QAA2B;QACpD;YAAE,MAAM;YAAS,OAAO;QAA4B;QACpD;YAAE,MAAM;YAAS,OAAO;QAA2B;QACnD;YAAE,MAAM;YAAW,OAAO;QAA6B;QACvD;YAAE,MAAM;YAAW,OAAO;QAA4B;QACtD;YAAE,MAAM;YAAY,OAAO;QAA2B;KACzD;IACD,QAAQ;QACJ;YAAE,MAAM;YAAY,OAAO;QAA6B;QACxD;YAAE,MAAM;YAAY,OAAO;QAA6B;QACxD;YAAE,MAAM;YAAY,OAAO;QAA6B;KAC3D;IACD,OAAO;QACH;YAAE,MAAM;YAAU,OAAO;QAA4B;QACrD;YAAE,MAAM;YAAU,OAAO;QAA4B;QACrD;YAAE,MAAM;YAAU,OAAO;QAA4B;QACrD;YAAE,MAAM;YAAU,OAAO;QAA4B;KACxD;IACD,OAAO;QACH;YAAE,MAAM;YAAY,OAAO;QAA2B;QACtD;YAAE,MAAM;YAAY,OAAO;QAA2B;QACtD;YAAE,MAAM;YAAY,OAAO;QAA2B;QACtD;YAAE,MAAM;YAAY,OAAO;QAA2B;KACzD;IACD,QAAQ;QAAC;YAAE,MAAM;YAAW,OAAO;QAA8B;KAAE;IACnE,OAAO;QAAC;YAAE,MAAM;YAAY,OAAO;QAA4B;KAAE;AACrE","debugId":null}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"btn\",\n  {\n    variants: {\n      variant: {\n        default: \"btn-primary\",\n        destructive: \"btn-error\",\n        outline: \"btn-outline\",\n        secondary: \"btn-secondary\",\n        ghost: \"btn-ghost\",\n        link: \"btn-link\",\n      },\n      size: {\n        default: \"btn-md\",\n        sm: \"btn-sm\",\n        lg: \"btn-lg\",\n        icon: \"btn-square\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,OACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;YACb,SAAS;YACT,WAAW;YACX,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 395, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 461, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"peer border-input dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"flex items-center justify-center text-current transition-none\"\n      >\n        <CheckIcon className=\"size-3.5\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  )\n}\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACiD;IACpD,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+eACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;sBAEV,cAAA,6LAAC,2MAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI7B;KArBS","debugId":null}},
    {"offset": {"line": 512, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction ScrollArea({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.Root>) {\n  return (\n    <ScrollAreaPrimitive.Root\n      data-slot=\"scroll-area\"\n      className={cn(\"relative\", className)}\n      {...props}\n    >\n      <ScrollAreaPrimitive.Viewport\n        data-slot=\"scroll-area-viewport\"\n        className=\"focus-visible:ring-ring/50 size-full rounded-[inherit] transition-[color,box-shadow] outline-none focus-visible:ring-[3px] focus-visible:outline-1\"\n      >\n        {children}\n      </ScrollAreaPrimitive.Viewport>\n      <ScrollBar />\n      <ScrollAreaPrimitive.Corner />\n    </ScrollAreaPrimitive.Root>\n  )\n}\n\nfunction ScrollBar({\n  className,\n  orientation = \"vertical\",\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>) {\n  return (\n    <ScrollAreaPrimitive.ScrollAreaScrollbar\n      data-slot=\"scroll-area-scrollbar\"\n      orientation={orientation}\n      className={cn(\n        \"flex touch-none p-px transition-colors select-none\",\n        orientation === \"vertical\" &&\n          \"h-full w-2.5 border-l border-l-transparent\",\n        orientation === \"horizontal\" &&\n          \"h-2.5 flex-col border-t border-t-transparent\",\n        className\n      )}\n      {...props}\n    >\n      <ScrollAreaPrimitive.ScrollAreaThumb\n        data-slot=\"scroll-area-thumb\"\n        className=\"bg-border relative flex-1 rounded-full\"\n      />\n    </ScrollAreaPrimitive.ScrollAreaScrollbar>\n  )\n}\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,WAAW,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OACmD;IACtD,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAC3B,aAAU;gBACV,WAAU;0BAET;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;AAGjC;KArBS;AAuBT,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,UAAU,EACxB,GAAG,OACkE;IACrE,qBACE,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,aAAU;QACV,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA,gBAAgB,cACd,8CACF,gBAAgB,gBACd,gDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAClC,aAAU;YACV,WAAU;;;;;;;;;;;AAIlB;MAzBS","debugId":null}},
    {"offset": {"line": 590, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 642, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 757, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/LeftPanel.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Levels, PlacingObject } from '@/app/page';\nimport { data, objectCategories } from '@/lib/data';\nimport Image from 'next/image';\nimport { ObjectCategory } from './RightPanel';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Separator } from '@/components/ui/separator';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { cn } from '@/lib/utils';\nimport {\n  Apple,\n  Component,\n  PlayCircle,\n  PlusCircle,\n  Trees,\n  Waves,\n  CheckCircle2,\n  Sailboat,\n} from 'lucide-react';\n\nconst SIZABLE_CATEGORIES: ObjectCategory[] = ['fruits', 'stones', 'water', 'trees', 'finish', 'extra'];\nconst SINGULAR_RUSSIAN_MAP: Partial<Record<ObjectCategory, string>> = {\n    fruits: 'фрукт',\n    stones: 'камень',\n    trees: 'дерево',\n    finish: 'финиш',\n    extra: 'экстра',\n    water: 'объект',\n};\nconst SINGULAR_ENGLISH_MAP: Partial<Record<ObjectCategory, string>> = {\n    fruits: 'fruit',\n    stones: 'stone',\n    trees: 'tree',\n    finish: 'finish',\n    extra: 'extra',\n    water: 'water',\n};\n\nconst iconMap: Record<string, React.ElementType> = {\n  islands: Sailboat,\n  start: PlayCircle,\n  fruits: Apple,\n  stones: Component,\n  water: Waves,\n  trees: Trees,\n  finish: CheckCircle2,\n  extra: PlusCircle,\n};\n\nexport type LeftPanelContent = 'islands' | 'settings' | 'levels' | ObjectCategory | null;\n\ninterface LeftPanelProps {\n  content: LeftPanelContent;\n  setContent: (content: LeftPanelContent) => void;\n  levels: Levels;\n  currentLevelName: string;\n  loadLevel: (name: string) => void;\n  onCreateLevel: () => void;\n  canvasSize: { width: number; height: number };\n  setCanvasSize: (size: { width: number; height: number }) => void;\n  placingObject: PlacingObject | null;\n  setPlacingObject: (obj: PlacingObject | null) => void;\n  fruitDimensions: Record<string, { width: number; height: number }>;\n  onFruitDimensionChange: (name: string, size: { width: number; height: number }) => void;\n  stoneDimensions: Record<string, { width: number; height: number }>;\n  onStoneDimensionChange: (name: string, size: { width: number; height: number }) => void;\n  waterDimensions: Record<string, { width: number; height: number }>;\n  onWaterDimensionChange: (name: string, size: { width: number; height: number }) => void;\n  treeDimensions: Record<string, { width: number; height: number }>;\n  onTreeDimensionChange: (name: string, size: { width: number; height: number }) => void;\n  finishDimensions: Record<string, { width: number; height: number }>;\n  onFinishDimensionChange: (name: string, size: { width: number; height: number }) => void;\n  extraDimensions: Record<string, { width: number; height: number }>;\n  onExtraDimensionChange: (name: string, size: { width: number; height: number }) => void;\n}\n\nconst LeftPanel: React.FC<LeftPanelProps> = ({\n  content,\n  setContent,\n  levels,\n  currentLevelName,\n  loadLevel,\n  onCreateLevel,\n  canvasSize,\n  setCanvasSize,\n  placingObject,\n  setPlacingObject,\n  fruitDimensions,\n  onFruitDimensionChange,\n  stoneDimensions,\n  onStoneDimensionChange,\n  waterDimensions,\n  onWaterDimensionChange,\n  treeDimensions,\n  onTreeDimensionChange,\n  finishDimensions,\n  onFinishDimensionChange,\n  extraDimensions,\n  onExtraDimensionChange,\n}) => {\n  const [selectedCategory, setSelectedCategory] = useState<ObjectCategory | null>('islands');\n  const [selectedItemForSizing, setSelectedItemForSizing] = useState<string | null>(null);\n  const [keepAspectRatio, setKeepAspectRatio] = useState(true);\n  const [itemSize, setItemSize] = useState<{ width: number; height: number }>({ width: 0, height: 0 });\n\n  useEffect(() => {\n    setSelectedItemForSizing(null);\n  }, [selectedCategory]);\n\n  const handleItemClick = (item: { name: string; image: string }) => {\n    if (placingObject?.name === item.name) {\n      setPlacingObject(null);\n      setSelectedItemForSizing(null);\n    } else {\n      const img = new window.Image();\n      img.src = item.image;\n      img.onload = () => {\n        let width, height;\n        const isFruit = selectedCategory === 'fruits';\n        const isStone = selectedCategory === 'stones';\n        const isWater = selectedCategory === 'water';\n        const isTree = selectedCategory === 'trees';\n        const isFinish = selectedCategory === 'finish';\n        const isExtra = selectedCategory === 'extra';\n        \n        let dimensions = fruitDimensions;\n        if (isStone) dimensions = stoneDimensions;\n        if (isWater) dimensions = waterDimensions;\n        if (isTree) dimensions = treeDimensions;\n        if (isFinish) dimensions = finishDimensions;\n        if (isExtra) dimensions = extraDimensions;\n\n        const savedDim = dimensions[item.name];\n\n        if ((isFruit || isStone || isWater || isTree || isFinish || isExtra) && savedDim) {\n          width = savedDim.width;\n          height = savedDim.height;\n        } else if (isFruit || isStone || isWater || isTree || isFinish || isExtra) {\n          width = 64;\n          height = 64;\n        } else {\n          const MAX_DIM = 128;\n          const scale = Math.min(1, MAX_DIM / img.naturalWidth, MAX_DIM / img.naturalHeight);\n          width = img.naturalWidth * scale;\n          height = img.naturalHeight * scale;\n        }\n\n        setPlacingObject({\n          ...item,\n          width,\n          height,\n          originalWidth: img.naturalWidth,\n          originalHeight: img.naturalHeight,\n        } as PlacingObject);\n\n        if (isFruit || isStone || isWater || isTree || isFinish || isExtra) {\n          setSelectedItemForSizing(item.name);\n          setItemSize({ width, height });\n        } else {\n          setSelectedItemForSizing(null);\n        }\n      };\n    }\n  };\n\n  const handleSizeChange = (key: 'width' | 'height', value: string | number) => {\n    const numValue = Number(value);\n    if (!isNaN(numValue) && numValue > 0) {\n      setCanvasSize({ ...canvasSize, [key]: numValue });\n    }\n  };\n\n  const handleDimensionChange = (\n    key: 'width' | 'height',\n    value: string | number,\n    category: 'fruits' | 'stones' | 'water' | 'trees' | 'finish' | 'extra'\n  ) => {\n    const numValue = Number(value);\n    if (selectedItemForSizing && !isNaN(numValue) && numValue > 0) {\n      if (keepAspectRatio) {\n        const dimensions = { fruitDimensions, stoneDimensions, waterDimensions, treeDimensions, finishDimensions, extraDimensions };\n        const dimKey = `${category}Dimensions` as keyof typeof dimensions;\n        const originalDim = dimensions[dimKey][selectedItemForSizing];\n        const ratio = originalDim ? originalDim.width / originalDim.height : 1;\n\n        if (key === 'width') {\n          setItemSize({ width: numValue, height: Math.round(numValue / ratio) });\n        } else {\n          setItemSize({ width: Math.round(numValue * ratio), height: numValue });\n        }\n      } else {\n        setItemSize((prev) => ({ ...prev, [key]: numValue }));\n      }\n    }\n  };\n\n  const handleDimensionSave = () => {\n    if (!selectedItemForSizing || !selectedCategory) return;\n\n    switch (selectedCategory) {\n      case 'fruits':\n        onFruitDimensionChange(selectedItemForSizing, itemSize);\n        break;\n      case 'stones':\n        onStoneDimensionChange(selectedItemForSizing, itemSize);\n        break;\n      case 'water':\n        onWaterDimensionChange(selectedItemForSizing, itemSize);\n        break;\n      case 'trees':\n        onTreeDimensionChange(selectedItemForSizing, itemSize);\n        break;\n      case 'finish':\n        onFinishDimensionChange(selectedItemForSizing, itemSize);\n        break;\n      case 'extra':\n        onExtraDimensionChange(selectedItemForSizing, itemSize);\n        break;\n    }\n\n    if (placingObject) {\n      setPlacingObject({\n        ...placingObject,\n        width: itemSize.width,\n        height: itemSize.height,\n      });\n    }\n  };\n\n  const renderContent = () => {\n    if (content === 'levels') {\n      return (\n        <Card className=\"m-4\">\n          <CardHeader>\n            <CardTitle className=\"text-lg\">Уровни</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            <Button onClick={onCreateLevel} className=\"w-full\">\n              Создать новый уровень\n            </Button>\n            <ScrollArea className=\"h-[300px]\">\n              <div className=\"space-y-1\">\n                {Object.keys(levels).map((name) => (\n                  <Button\n                    key={name}\n                    variant={currentLevelName === name ? 'default' : 'ghost'}\n                    onClick={() => loadLevel(name)}\n                    className=\"w-full justify-start\"\n                  >\n                    {name}\n                    {currentLevelName === name && <Badge variant=\"secondary\" className=\"ml-auto\">Активный</Badge>}\n                  </Button>\n                ))}\n              </div>\n            </ScrollArea>\n          </CardContent>\n        </Card>\n      );\n    }\n    \n    if (content === 'settings') {\n      return (\n        <Card className=\"m-4\">\n          <CardHeader>\n            <CardTitle className=\"text-lg\">Размеры карты</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"canvas-width\">Ширина (пикс.)</Label>\n              <Input\n                id=\"canvas-width\"\n                type=\"number\"\n                value={canvasSize.width}\n                onChange={(e) => handleSizeChange('width', e.target.value)}\n                min={100}\n              />\n            </div>\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"canvas-height\">Высота (пикс.)</Label>\n              <Input\n                id=\"canvas-height\"\n                type=\"number\"\n                value={canvasSize.height}\n                onChange={(e) => handleSizeChange('height', e.target.value)}\n                min={100}\n              />\n            </div>\n          </CardContent>\n        </Card>\n      );\n    }\n\n    const categoryData = selectedCategory ? data[selectedCategory] : null;\n    const isSizable = selectedCategory && SIZABLE_CATEGORIES.includes(selectedCategory);\n\n    const randomItemName = selectedCategory ? `random_${SINGULAR_ENGLISH_MAP[selectedCategory] || selectedCategory}` : '';\n    const randomItemImage = selectedCategory ? `/assets/${selectedCategory}/random_${SINGULAR_ENGLISH_MAP[selectedCategory] || selectedCategory}.png` : '';\n    const randomItemAltText = selectedCategory ? `Случайный ${SINGULAR_RUSSIAN_MAP[selectedCategory] || objectCategories[selectedCategory]}` : '';\n\n    return (\n      <div className=\"flex flex-col h-full\">\n        <Card className=\"m-4 mb-2\">\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-lg\">Категории объектов</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex flex-wrap gap-2\">\n              {Object.entries(objectCategories).map(([key, name]) => {\n                const Icon = iconMap[key as ObjectCategory];\n                return (\n                  <Button\n                    key={key}\n                    variant={selectedCategory === key ? 'default' : 'outline'}\n                    size=\"sm\"\n                    onClick={() => setSelectedCategory(key as ObjectCategory)}\n                    className=\"flex-grow flex items-center gap-2\"\n                  >\n                    <span>{name}</span>\n                  </Button>\n                );\n              })}\n            </div>\n          </CardContent>\n        </Card>\n\n        <div className=\"flex-grow mx-4 mb-4\">\n          {selectedCategory && categoryData && (\n            <Card>\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-lg capitalize\">\n                  {objectCategories[selectedCategory]}\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ScrollArea className=\"h-[400px]\">\n                  <div className=\"grid grid-cols-3 gap-2 pr-4\">\n                  {categoryData.map((item: any) => (\n                    <Button\n                      key={item.name}\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className={cn(\n                        'p-2 rounded-md border-2 hover:bg-accent',\n                        placingObject?.name === item.name ? 'border-primary' : 'border-transparent'\n                      )}\n                      onClick={() => handleItemClick(item)}\n                    >\n                      <div className=\"flex flex-col items-center gap-1\">\n                        <Image src={item.image} alt={item.name} width={56} height={56} />\n                      </div>\n                    </Button>\n                  ))}\n                  {isSizable && selectedCategory && (\n                    <Button\n                      key={randomItemName}\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className={cn(\n                        'p-2 rounded-md border-2 hover:bg-accent',\n                        placingObject?.name === randomItemName ? 'border-primary' : 'border-transparent'\n                      )}\n                      onClick={() => {\n                        if (placingObject?.name === randomItemName) {\n                          setPlacingObject(null);\n                          setSelectedItemForSizing(null);\n                        } else {\n                          const allDimensions = {\n                              fruits: fruitDimensions,\n                              stones: stoneDimensions,\n                              water: waterDimensions,\n                              trees: treeDimensions,\n                              finish: finishDimensions,\n                              extra: extraDimensions,\n                          };\n                          const categoryKey = selectedCategory as keyof typeof allDimensions;\n                          const categoryDimensions = allDimensions[categoryKey];\n                          const savedDim = categoryDimensions ? categoryDimensions[randomItemName] : undefined;\n\n                          const width = savedDim?.width || 64;\n                          const height = savedDim?.height || 64;\n                          setPlacingObject({\n                            name: randomItemName,\n                            image: randomItemImage,\n                            width,\n                            height,\n                            originalWidth: width,\n                            originalHeight: height,\n                          });\n                          setSelectedItemForSizing(randomItemName);\n                        }\n                      }}\n                    >\n                      <div className=\"flex flex-col items-center gap-1\">\n                        <Image src={randomItemImage} alt={randomItemAltText} width={56} height={56} />\n                      </div>\n                    </Button>\n                  )}\n                  </div>\n                </ScrollArea>\n              </CardContent>\n            </Card>\n          )}\n        </div>\n\n        {selectedItemForSizing && (selectedCategory === 'fruits' || selectedCategory === 'stones' || selectedCategory === 'water' || selectedCategory === 'trees' || selectedCategory === 'finish' || selectedCategory === 'extra') && (\n          <Card className=\"mx-4 mb-4\">\n            <CardHeader>\n              <CardTitle className=\"text-base\">\n                Размер для: {selectedItemForSizing}\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"item-width\">Ширина</Label>\n                  <Input\n                    id=\"item-width\"\n                    type=\"number\"\n                    value={itemSize.width}\n                    onChange={(e) =>\n                      handleDimensionChange(\n                        'width',\n                        e.target.value,\n                        selectedCategory as 'fruits' | 'stones' | 'water' | 'trees' | 'finish' | 'extra'\n                      )\n                    }\n                  />\n                </div>\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"item-height\">Высота</Label>\n                  <Input\n                    id=\"item-height\"\n                    type=\"number\"\n                    value={itemSize.height}\n                    onChange={(e) =>\n                      handleDimensionChange(\n                        'height',\n                        e.target.value,\n                        selectedCategory as 'fruits' | 'stones' | 'water' | 'trees' | 'finish' | 'extra'\n                      )\n                    }\n                  />\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id=\"keep-aspect-ratio\"\n                  checked={keepAspectRatio}\n                  onCheckedChange={(checked) => setKeepAspectRatio(Boolean(checked))}\n                />\n                <Label htmlFor=\"keep-aspect-ratio\">Сохранять пропорции</Label>\n              </div>\n              <Button className=\"w-full\" onClick={handleDimensionSave}>Сохранить размеры</Button>\n            </CardContent>\n          </Card>\n        )}\n      </div>\n    );\n  };\n\n  return <div className=\"py-2\">{renderContent()}</div>;\n};\n\nexport default LeftPanel;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1501, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/ObjectTree.tsx"],"sourcesContent":["import React from 'react';\nimport { MapObject } from '@/app/page';\nimport { Button } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\n\ninterface ObjectTreeProps {\n  objects: MapObject[];\n  onSelectObject: (object: MapObject) => void;\n  selectedObject: MapObject | null;\n}\n\nconst ObjectTree: React.FC<ObjectTreeProps> = ({ objects, onSelectObject, selectedObject }) => {\n  const buildTree = (items: MapObject[]): MapObject[] => {\n    const itemMap = new Map<string, MapObject>();\n    items.forEach(item => {\n      itemMap.set(item.id, { ...item, children: [] });\n    });\n\n    const tree: MapObject[] = [];\n    items.forEach(item => {\n      if (item.parentId && itemMap.has(item.parentId)) {\n        const parent = itemMap.get(item.parentId);\n        parent?.children?.push(itemMap.get(item.id)!);\n      } else {\n        tree.push(itemMap.get(item.id)!);\n      }\n    });\n\n    return tree;\n  };\n\n  const objectTree = buildTree(objects);\n\n  const renderTree = (nodes: MapObject[]) => (\n    <div className=\"pl-4\">\n      {nodes.map(node => (\n        <div key={node.id}>\n          <Button\n            variant=\"ghost\"\n            onClick={() => onSelectObject(node)}\n            className={cn(\n              'w-full justify-start px-2 py-1 h-auto',\n              selectedObject?.id === node.id && 'bg-accent text-accent-foreground'\n            )}\n          >\n            <span className=\"text-sm\">{node.name}</span>\n          </Button>\n          {node.children && node.children.length > 0 && renderTree(node.children)}\n        </div>\n      ))}\n    </div>\n  );\n\n  return (\n    <div>\n      {renderTree(objectTree)}\n    </div>\n  );\n};\n\nexport default ObjectTree; "],"names":[],"mappings":";;;;AAEA;AACA;;;;AAQA,MAAM,aAAwC,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE;IACxF,MAAM,YAAY,CAAC;QACjB,MAAM,UAAU,IAAI;QACpB,MAAM,OAAO,CAAC,CAAA;YACZ,QAAQ,GAAG,CAAC,KAAK,EAAE,EAAE;gBAAE,GAAG,IAAI;gBAAE,UAAU,EAAE;YAAC;QAC/C;QAEA,MAAM,OAAoB,EAAE;QAC5B,MAAM,OAAO,CAAC,CAAA;YACZ,IAAI,KAAK,QAAQ,IAAI,QAAQ,GAAG,CAAC,KAAK,QAAQ,GAAG;gBAC/C,MAAM,SAAS,QAAQ,GAAG,CAAC,KAAK,QAAQ;gBACxC,QAAQ,UAAU,KAAK,QAAQ,GAAG,CAAC,KAAK,EAAE;YAC5C,OAAO;gBACL,KAAK,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,EAAE;YAC/B;QACF;QAEA,OAAO;IACT;IAEA,MAAM,aAAa,UAAU;IAE7B,MAAM,aAAa,CAAC,sBAClB,6LAAC;YAAI,WAAU;sBACZ,MAAM,GAAG,CAAC,CAAA,qBACT,6LAAC;;sCACC,6LAAC,qIAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,SAAS,IAAM,eAAe;4BAC9B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yCACA,gBAAgB,OAAO,KAAK,EAAE,IAAI;sCAGpC,cAAA,6LAAC;gCAAK,WAAU;0CAAW,KAAK,IAAI;;;;;;;;;;;wBAErC,KAAK,QAAQ,IAAI,KAAK,QAAQ,CAAC,MAAM,GAAG,KAAK,WAAW,KAAK,QAAQ;;mBAX9D,KAAK,EAAE;;;;;;;;;;IAiBvB,qBACE,6LAAC;kBACE,WAAW;;;;;;AAGlB;KA/CM;uCAiDS","debugId":null}},
    {"offset": {"line": 1585, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/RightPanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { MapObject } from '@/app/page';\nimport { Trash2, Lock, Unlock } from 'lucide-react';\nimport ObjectTree from './ObjectTree';\n\nexport type ObjectCategory = 'islands' | 'start' | 'fruits' | 'stones' | 'water' | 'trees' | 'finish' | 'extra';\n\ninterface RightPanelProps {\n  mapObjects: MapObject[];\n  selectedObject: MapObject | null;\n  onSelectObject: (object: MapObject) => void;\n  onUpdateObject: (updatedObject: MapObject) => void;\n  onDeleteObject: (id: string) => void;\n  leftPanelContent: 'islands' | 'settings' | 'levels' | ObjectCategory | null;\n  canvasSize: { width: number; height: number };\n  setCanvasSize: (size: { width: number; height: number }) => void;\n  keepAspectRatio: boolean;\n  setKeepAspectRatio: (value: boolean) => void;\n}\n\nconst RightPanel: React.FC<RightPanelProps> = ({\n  mapObjects,\n  selectedObject,\n  onSelectObject,\n  onUpdateObject,\n  onDeleteObject,\n  leftPanelContent,\n  canvasSize,\n  setCanvasSize,\n  keepAspectRatio,\n  setKeepAspectRatio,\n}) => {\n  const [view, setView] = useState<'properties' | 'tree'>('properties');\n\n  const handleInputChange = (id: string, value: any) => {\n    if (!selectedObject) return;\n\n    let newObject: MapObject = { ...selectedObject, [id]: value };\n\n    if (keepAspectRatio) {\n      if (id === 'width' && selectedObject.originalWidth && selectedObject.originalHeight) {\n        const aspectRatio = selectedObject.originalHeight / selectedObject.originalWidth;\n        newObject.height = Number(value) * aspectRatio;\n      } else if (id === 'height' && selectedObject.originalWidth && selectedObject.originalHeight) {\n        const aspectRatio = selectedObject.originalWidth / selectedObject.originalHeight;\n        newObject.width = Number(value) * aspectRatio;\n      } else if (id === 'widthPercent' && selectedObject.originalWidth && selectedObject.originalHeight) {\n        newObject.height = selectedObject.originalHeight * (Number(value) / 100);\n      } else if (id === 'heightPercent' && selectedObject.originalWidth && selectedObject.originalHeight) {\n        newObject.width = selectedObject.originalWidth * (Number(value) / 100);\n      }\n    }\n\n    if (id === 'widthPercent' && selectedObject.originalWidth) {\n      newObject.width = selectedObject.originalWidth * (Number(value) / 100);\n    } else if (id === 'heightPercent' && selectedObject.originalHeight) {\n      newObject.height = selectedObject.originalHeight * (Number(value) / 100);\n    }\n    \n    onUpdateObject(newObject);\n  };\n\n  const handleCanvasSizeChange = (id: 'width' | 'height', value: number | string) => {\n    const newSize = {\n      ...canvasSize,\n      [id]: Number(value) || 0,\n    };\n    setCanvasSize(newSize);\n  };\n\n  if (leftPanelContent === 'levels') {\n    return (\n      <div className=\"card bg-base-100 shadow-xl m-4\">\n        <div className=\"card-body\">\n          <h2 className=\"card-title\">Размеры уровня</h2>\n          <div className=\"form-control w-full\">\n            <label className=\"label\">\n              <span className=\"label-text\">Ширина (пикс.)</span>\n            </label>\n            <input\n              type=\"number\"\n              className=\"input input-bordered w-full\"\n              value={canvasSize.width}\n              onChange={(e) => handleCanvasSizeChange('width', e.target.value)}\n              min={100}\n            />\n          </div>\n          <div className=\"form-control w-full\">\n            <label className=\"label\">\n              <span className=\"label-text\">Высота (пикс.)</span>\n            </label>\n            <input\n              type=\"number\"\n              className=\"input input-bordered w-full\"\n              value={canvasSize.height}\n              onChange={(e) => handleCanvasSizeChange('height', e.target.value)}\n              min={100}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-4 h-full flex flex-col\">\n      <div className=\"tabs tabs-boxed w-full mb-4\">\n        <a \n          className={`tab ${view === 'properties' ? 'tab-active' : ''}`}\n          onClick={() => setView('properties')}\n        >\n          Свойства\n        </a>\n        <a \n          className={`tab ${view === 'tree' ? 'tab-active' : ''}`}\n          onClick={() => setView('tree')}\n        >\n          Дерево\n        </a>\n      </div>\n      \n      {view === 'tree' && (\n        <div className=\"card bg-base-100 shadow-xl h-full\">\n          <div className=\"card-body\">\n            <h2 className=\"card-title\">\n              Дерево объектов\n              <div className=\"badge badge-secondary\">{mapObjects.length}</div>\n            </h2>\n            <div className=\"overflow-y-auto h-[calc(100vh-300px)]\">\n              <ObjectTree objects={mapObjects} onSelectObject={onSelectObject} selectedObject={selectedObject} />\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {view === 'properties' && (\n        <div className=\"card bg-base-100 shadow-xl h-full\">\n          <div className=\"card-body\">\n            <h2 className=\"card-title flex justify-between items-center\">\n              Свойства объекта\n              {selectedObject && (\n                <div className=\"flex items-center gap-2\">\n                  <button \n                    className=\"btn btn-sm btn-ghost\"\n                    onClick={() => onUpdateObject({ ...selectedObject, isLocked: !selectedObject.isLocked })}\n                  >\n                    {selectedObject.isLocked ? <Lock className=\"h-4 w-4\" /> : <Unlock className=\"h-4 w-4\" />}\n                  </button>\n                  <button \n                    className=\"btn btn-sm btn-error\"\n                    onClick={() => onDeleteObject(selectedObject.id)}\n                  >\n                    <Trash2 className=\"h-4 w-4\" />\n                  </button>\n                </div>\n              )}\n            </h2>\n            \n            {!selectedObject ? (\n              <div className=\"text-center py-8\">\n                <p className=\"text-base-content opacity-70\">Объект не выбран</p>\n                <p className=\"text-sm text-base-content opacity-50 mt-2\">\n                  Выберите объект на карте для редактирования его свойств\n                </p>\n              </div>\n            ) : (\n              <div className=\"overflow-y-auto h-[calc(100vh-400px)]\">\n                <div className=\"space-y-4\">\n                  <div className=\"form-control w-full\">\n                    <label className=\"label\">\n                      <span className=\"label-text\">Имя</span>\n                    </label>\n                    <input\n                      className=\"input input-bordered w-full\"\n                      value={selectedObject.name}\n                      onChange={(event) => onUpdateObject({ ...selectedObject, name: event.currentTarget.value })}\n                    />\n                  </div>\n                  <div className=\"form-control w-full\">\n                    <label className=\"label\">\n                      <span className=\"label-text\">Ширина (пикс.)</span>\n                    </label>\n                    <input\n                      className=\"input input-bordered w-full\"\n                      type=\"number\"\n                      value={Math.round(selectedObject.width)}\n                      onChange={(e) => handleInputChange('width', e.target.value)}\n                      min={1}\n                    />\n                  </div>\n                  <div className=\"form-control w-full\">\n                    <label className=\"label\">\n                      <span className=\"label-text\">Высота (пикс.)</span>\n                    </label>\n                    <input\n                      className=\"input input-bordered w-full\"\n                      type=\"number\"\n                      value={Math.round(selectedObject.height)}\n                      onChange={(e) => handleInputChange('height', e.target.value)}\n                      min={1}\n                    />\n                  </div>\n                  {selectedObject.originalWidth && (\n                    <div className=\"form-control w-full\">\n                      <label className=\"label\">\n                        <span className=\"label-text\">Ширина (%)</span>\n                      </label>\n                      <input\n                        className=\"input input-bordered w-full\"\n                        type=\"number\"\n                        value={Math.round((selectedObject.width / selectedObject.originalWidth) * 100)}\n                        onChange={(e) => handleInputChange('widthPercent', e.target.value)}\n                        min={1}\n                      />\n                    </div>\n                  )}\n                  {selectedObject.originalHeight && (\n                    <div className=\"form-control w-full\">\n                      <label className=\"label\">\n                        <span className=\"label-text\">Высота (%)</span>\n                      </label>\n                      <input\n                        className=\"input input-bordered w-full\"\n                        type=\"number\"\n                        value={Math.round((selectedObject.height / selectedObject.originalHeight) * 100)}\n                        onChange={(e) => handleInputChange('heightPercent', e.target.value)}\n                        min={1}\n                      />\n                    </div>\n                  )}\n                  <div className=\"form-control\">\n                    <label className=\"label cursor-pointer\">\n                      <span className=\"label-text\">Сохранять пропорции</span>\n                      <input\n                        type=\"checkbox\"\n                        className=\"toggle toggle-primary\"\n                        checked={keepAspectRatio}\n                        onChange={(e) => setKeepAspectRatio(e.target.checked)}\n                      />\n                    </label>\n                  </div>\n                  <div className=\"form-control w-full\">\n                    <label className=\"label\">\n                      <span className=\"label-text\">X координата</span>\n                    </label>\n                    <input\n                      className=\"input input-bordered w-full\"\n                      type=\"number\"\n                      value={Math.round(selectedObject.x)}\n                      onChange={(e) => handleInputChange('x', Number(e.target.value))}\n                    />\n                  </div>\n                  <div className=\"form-control w-full\">\n                    <label className=\"label\">\n                      <span className=\"label-text\">Y координата</span>\n                    </label>\n                    <input\n                      className=\"input input-bordered w-full\"\n                      type=\"number\"\n                      value={Math.round(selectedObject.y)}\n                      onChange={(e) => handleInputChange('y', Number(e.target.value))}\n                    />\n                  </div>\n                  <div className=\"form-control\">\n                    <label className=\"label cursor-pointer\">\n                      <span className=\"label-text\">Отразить по горизонтали</span>\n                      <input\n                        type=\"checkbox\"\n                        className=\"toggle toggle-primary\"\n                        checked={selectedObject.flipX}\n                        onChange={(e) => onUpdateObject({ ...selectedObject, flipX: e.target.checked })}\n                      />\n                    </label>\n                  </div>\n                  <div className=\"form-control\">\n                    <label className=\"label cursor-pointer\">\n                      <span className=\"label-text\">Отразить по вертикали</span>\n                      <input\n                        type=\"checkbox\"\n                        className=\"toggle toggle-primary\"\n                        checked={selectedObject.flipY}\n                        onChange={(e) => onUpdateObject({ ...selectedObject, flipY: e.target.checked })}\n                      />\n                    </label>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RightPanel;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2298, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, useRef } from 'react';\nimport Toolbar from '@/components/Toolbar';\nimport LeftPanel from '@/components/LeftPanel';\nimport RightPanel, { ObjectCategory } from '@/components/RightPanel';\nimport dynamic from 'next/dynamic';\nimport { toast } from \"sonner\"\n\nconst Canvas = dynamic(() => import('@/components/Canvas'), {\n  ssr: false,\n  loading: () => <div className=\"flex-grow flex justify-center items-center bg-gray-100\"><p>Loading Canvas...</p></div>\n});\n\nexport interface MapObject {\n  id: string;\n  name: string;\n  image: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  originalWidth?: number;\n  originalHeight?: number;\n  flipX: boolean;\n  flipY: boolean;\n  isLocked: boolean;\n  parentId?: string;\n  children?: MapObject[];\n}\n\nexport interface PlacingObject {\n  name: string;\n  image: string;\n  width: number;\n  height: number;\n  originalWidth: number;\n  originalHeight: number;\n}\n\nexport type Tool = 'pointer' | 'placing' | 'map';\n\nexport interface Levels {\n  [key: string]: {\n    objects: MapObject[];\n    dimensions: { width: number, height: number };\n  }\n}\n\nexport default function Home() {\n  const [levels, setLevels] = useState<Levels>({});\n  const [currentLevelName, setCurrentLevelName] = useState('');\n  const [mapObjects, setMapObjects] = useState<MapObject[]>([]);\n  const [selectedObject, setSelectedObject] = useState<MapObject | null>(null);\n  const [activeTool, setActiveTool] = useState<Tool>('pointer');\n  const [leftPanelContent, setLeftPanelContent] = useState<ObjectCategory | \"levels\" | \"settings\" | \"islands\" | null>('islands');\n  const [placingObject, setPlacingObject] = useState<PlacingObject | null>(null);\n  const [keepAspectRatio, setKeepAspectRatio] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  \n  const [isRightPanelVisible, setIsRightPanelVisible] = useState(true);\n  const [rightPanelWidth, setRightPanelWidth] = useState(350);\n\n  const [canvasSize, setCanvasSize] = useState({ width: 800, height: 600 });\n  const canvasContainerRef = useRef<HTMLDivElement>(null);\n\n  const [fruitDimensions, setFruitDimensions] = useState<Record<string, { width: number; height: number }>>({});\n  const [stoneDimensions, setStoneDimensions] = useState<Record<string, { width: number; height: number }>>({});\n  const [waterDimensions, setWaterDimensions] = useState<Record<string, { width: number; height: number }>>({});\n  const [treeDimensions, setTreeDimensions] = useState<Record<string, { width: number; height: number }>>({});\n  const [finishDimensions, setFinishDimensions] = useState<Record<string, { width: number; height: number }>>({});\n  const [extraDimensions, setExtraDimensions] = useState<Record<string, { width: number; height: number }>>({});\n\n  const fetchLevels = async () => {\n    const response = await fetch('/api/levels');\n    const data = await response.json();\n    setLevels(data);\n    return data;\n  };\n\n  useEffect(() => {\n    const initLevels = async () => {\n      const data = await fetchLevels();\n      const levelNames = Object.keys(data);\n      const lastOpened = localStorage.getItem('maze-editor-last-level-name');\n      if (lastOpened && data[lastOpened]) {\n        loadLevel(lastOpened, data);\n      } else if (levelNames.length > 0) {\n        loadLevel(levelNames[0], data);\n      }\n    };\n    initLevels();\n  }, []);\n\n  useEffect(() => {\n    if (activeTool === 'map') {\n      setLeftPanelContent('levels');\n    } else if (activeTool === 'pointer' && leftPanelContent === 'levels') {\n      setLeftPanelContent('islands');\n    }\n  }, [activeTool]);\n\n  useEffect(() => {\n    const savedFruitDimensions = localStorage.getItem('fruit-dimensions');\n    if (savedFruitDimensions) setFruitDimensions(JSON.parse(savedFruitDimensions));\n    const savedStoneDimensions = localStorage.getItem('stone-dimensions');\n    if (savedStoneDimensions) setStoneDimensions(JSON.parse(savedStoneDimensions));\n    const savedWaterDimensions = localStorage.getItem('water-dimensions');\n    if (savedWaterDimensions) setWaterDimensions(JSON.parse(savedWaterDimensions));\n    const savedTreeDimensions = localStorage.getItem('tree-dimensions');\n    if (savedTreeDimensions) setTreeDimensions(JSON.parse(savedTreeDimensions));\n    const savedFinishDimensions = localStorage.getItem('finish-dimensions');\n    if (savedFinishDimensions) setFinishDimensions(JSON.parse(savedFinishDimensions));\n    const savedExtraDimensions = localStorage.getItem('extra-dimensions');\n    if (savedExtraDimensions) setExtraDimensions(JSON.parse(savedExtraDimensions));\n  }, []);\n\n  useEffect(() => {\n    if (placingObject) {\n      setActiveTool('placing');\n    } else if (activeTool === 'placing') {\n      setActiveTool('pointer');\n    }\n  }, [placingObject]);\n\n  const handleSetFruitDimension = (name: string, size: { width: number; height: number }) => {\n    const newDimensions = { ...fruitDimensions, [name]: size };\n    setFruitDimensions(newDimensions);\n    localStorage.setItem('fruit-dimensions', JSON.stringify(newDimensions));\n  };\n\n  const handleSetStoneDimension = (name: string, size: { width: number; height: number }) => {\n    const newDimensions = { ...stoneDimensions, [name]: size };\n    setStoneDimensions(newDimensions);\n    localStorage.setItem('stone-dimensions', JSON.stringify(newDimensions));\n  };\n\n  const handleSetWaterDimension = (name: string, size: { width: number; height: number }) => {\n    const newDimensions = { ...waterDimensions, [name]: size };\n    setWaterDimensions(newDimensions);\n    localStorage.setItem('water-dimensions', JSON.stringify(newDimensions));\n  };\n\n  const handleSetTreeDimension = (name: string, size: { width: number; height: number }) => {\n    const newDimensions = { ...treeDimensions, [name]: size };\n    setTreeDimensions(newDimensions);\n    localStorage.setItem('tree-dimensions', JSON.stringify(newDimensions));\n  };\n\n  const handleSetFinishDimension = (name: string, size: { width: number; height: number }) => {\n    const newDimensions = { ...finishDimensions, [name]: size };\n    setFinishDimensions(newDimensions);\n    localStorage.setItem('finish-dimensions', JSON.stringify(newDimensions));\n  };\n\n  const handleSetExtraDimension = (name: string, size: { width: number; height: number }) => {\n    const newDimensions = { ...extraDimensions, [name]: size };\n    setExtraDimensions(newDimensions);\n    localStorage.setItem('extra-dimensions', JSON.stringify(newDimensions));\n  };\n\n  const loadLevel = (name: string, allLevels: Levels) => {\n    const levelData = allLevels[name];\n    if (levelData) {\n      setMapObjects(levelData.objects || []);\n      setCanvasSize(levelData.dimensions || { width: 800, height: 600 });\n      setCurrentLevelName(name);\n      setSelectedObject(null);\n      localStorage.setItem('maze-editor-last-level-name', name);\n    }\n  };\n\n  const handleCreateLevel = async () => {\n    const name = prompt(`Введите имя нового уровня:`, `Уровень ${Object.keys(levels).length + 1}`);\n    if (name) {\n        if (levels[name]) {\n            alert('Уровень с таким именем уже существует.');\n            return;\n        }\n        \n        const newLevelData = {\n            objects: [],\n            dimensions: { width: 800, height: 600 }\n        };\n\n        try {\n            await fetch('/api/save-level', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ name, data: newLevelData })\n            });\n            const updatedLevels = await fetchLevels();\n            loadLevel(name, updatedLevels);\n        } catch (error) {\n            console.error('Ошибка при создании уровня:', error);\n            alert(`Не удалось создать уровень: ${error}`);\n        }\n    }\n  };\n\n  const handleToolSelect = (tool: Tool) => {\n    if (tool === 'pointer') {\n      setPlacingObject(null);\n    }\n    setActiveTool(tool);\n  };\n\n  const handleSaveLevel = async () => {\n    if (!currentLevelName) {\n        toast.error('Ошибка', {\n          description: 'Не выбран уровень для сохранения.',\n        });\n        return;\n    }\n    setIsSaving(true);\n    const levelData = {\n        objects: mapObjects,\n        dimensions: canvasSize\n    };\n    try {\n        await fetch('/api/save-level', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ name: currentLevelName, data: levelData })\n        });\n        toast.success('Сохранено', {\n            description: `Уровень \"${currentLevelName}\" успешно сохранен.`,\n        });\n    } catch (error) {\n        console.error('Ошибка при сохранении уровня:', error);\n        toast.error('Ошибка сохранения', {\n            description: `Не удалось сохранить уровень: ${error}`,\n        });\n    } finally {\n      setIsSaving(false);\n    }\n    setSelectedObject(null);\n  };\n\n  const handleUpdateObject = (updatedAttrs: Partial<MapObject>) => {\n    if (!updatedAttrs.id) return;\n    const newMapObjects = mapObjects.map(obj => {\n      if (obj.id === updatedAttrs.id) {\n        return { ...obj, ...updatedAttrs };\n      }\n      return obj;\n    });\n    setMapObjects(newMapObjects);\n\n    if (selectedObject && selectedObject.id === updatedAttrs.id) {\n      setSelectedObject(prev => ({ ...prev!, ...updatedAttrs }));\n    }\n  };\n\n  const handleDeleteObject = (id: string) => {\n    setMapObjects(mapObjects.filter(obj => obj.id !== id));\n    setSelectedObject(null);\n  };\n\n  const handleToggleRightPanel = () => {\n    setIsRightPanelVisible(!isRightPanelVisible);\n  };\n\n  const handleResetRightPanel = () => {\n    setRightPanelWidth(350);\n    setIsRightPanelVisible(true);\n  };\n\n  const handleResizeMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const startX = e.clientX;\n    const startWidth = rightPanelWidth;\n\n    const handleMouseMove = (e: MouseEvent) => {\n      const newWidth = startWidth - (e.clientX - startX);\n      if (newWidth >= 250 && newWidth <= 600) {\n        setRightPanelWidth(newWidth);\n      }\n    };\n\n    const handleMouseUp = () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  return (\n    <div className=\"flex h-screen bg-gray-200\">\n      <div className=\"flex flex-col flex-grow\">\n        <Toolbar \n          activeTool={activeTool}\n          onToolSelect={handleToolSelect}\n          onSave={handleSaveLevel}\n          isSaving={isSaving}\n          isRightPanelVisible={isRightPanelVisible}\n          onToggleRightPanel={handleToggleRightPanel}\n          onResetRightPanel={handleResetRightPanel}\n        />\n        <div className=\"flex flex-grow overflow-hidden\">\n          <div className=\"w-[300px] bg-white dark:bg-zinc-950 border-r border-gray-300 dark:border-zinc-800 flex-shrink-0 flex flex-col\">\n            <LeftPanel\n              content={leftPanelContent}\n              setContent={setLeftPanelContent}\n              levels={levels}\n              currentLevelName={currentLevelName}\n              loadLevel={(name: string) => loadLevel(name, levels)}\n              onCreateLevel={handleCreateLevel}\n              canvasSize={canvasSize}\n              setCanvasSize={setCanvasSize}\n              placingObject={placingObject}\n              setPlacingObject={setPlacingObject}\n              fruitDimensions={fruitDimensions}\n              onFruitDimensionChange={handleSetFruitDimension}\n              stoneDimensions={stoneDimensions}\n              onStoneDimensionChange={handleSetStoneDimension}\n              waterDimensions={waterDimensions}\n              onWaterDimensionChange={handleSetWaterDimension}\n              treeDimensions={treeDimensions}\n              onTreeDimensionChange={handleSetTreeDimension}\n              finishDimensions={finishDimensions}\n              onFinishDimensionChange={handleSetFinishDimension}\n              extraDimensions={extraDimensions}\n              onExtraDimensionChange={handleSetExtraDimension}\n            />\n          </div>\n          <div ref={canvasContainerRef} className=\"flex-grow flex justify-center items-center bg-gray-100 relative overflow-auto min-w-0\">\n            <Canvas\n              mapObjects={mapObjects}\n              setMapObjects={setMapObjects}\n              selectedObject={selectedObject}\n              setSelectedObject={setSelectedObject}\n              canvasSize={canvasSize}\n              placingObject={placingObject}\n              setPlacingObject={setPlacingObject}\n              keepAspectRatio={keepAspectRatio}\n              onUpdateObject={handleUpdateObject}\n            />\n          </div>\n          \n          {isRightPanelVisible && (\n            <div\n              className=\"relative bg-white dark:bg-zinc-950 border-l-2 border-gray-300 dark:border-zinc-700 flex-shrink-0 shadow-lg\"\n              style={{ width: rightPanelWidth, minWidth: '250px', maxWidth: '600px' }}\n            >\n              <div \n                className=\"absolute top-0 bottom-0 -left-1 w-2 bg-blue-500 hover:bg-blue-600 cursor-col-resize z-10 opacity-50 hover:opacity-100 transition-opacity\"\n                onMouseDown={handleResizeMouseDown}\n                title=\"Перетащите для изменения размера панели\"\n              />\n              <RightPanel\n                mapObjects={mapObjects}\n                selectedObject={selectedObject}\n                onSelectObject={(obj: MapObject) => setSelectedObject(obj)}\n                onUpdateObject={handleUpdateObject}\n                onDeleteObject={handleDeleteObject}\n                leftPanelContent={leftPanelContent}\n                canvasSize={canvasSize}\n                setCanvasSize={setCanvasSize}\n                keepAspectRatio={keepAspectRatio}\n                setKeepAspectRatio={setKeepAspectRatio}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}
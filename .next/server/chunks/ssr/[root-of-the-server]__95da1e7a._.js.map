{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/Toolbar.tsx"],"sourcesContent":["import { Pointer, Map, Save, PanelRightOpen, PanelRightClose, RotateCcw } from 'lucide-react';\n\nexport type Tool = 'pointer' | 'placing' | 'map';\n\ninterface ToolbarProps {\n  activeTool: Tool;\n  onToolSelect: (tool: Tool) => void;\n  onSave: () => void;\n  isSaving: boolean;\n  isRightPanelVisible: boolean;\n  onToggleRightPanel: () => void;\n  onResetRightPanel: () => void;\n}\n\nconst Toolbar = ({ \n  activeTool, \n  onToolSelect, \n  onSave, \n  isSaving, \n  isRightPanelVisible, \n  onToggleRightPanel,\n  onResetRightPanel \n}: ToolbarProps) => (\n  <div className=\"flex justify-between items-center p-3 border-b border-gray-200 bg-white dark:bg-gray-900 dark:border-gray-700\">\n    <div className=\"flex gap-2\">\n      <button\n        type=\"button\"\n        className={`inline-flex items-center justify-center rounded-md p-2 text-sm font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 ${\n          activeTool === 'pointer' \n            ? 'bg-blue-100 text-blue-600 dark:bg-blue-900 dark:text-blue-300' \n            : 'text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-800'\n        }`}\n        onClick={() => onToolSelect('pointer')}\n        aria-label=\"Pointer\"\n      >\n        <Pointer className=\"h-5 w-5\" />\n      </button>\n    </div>\n    <div className=\"flex gap-2\">\n      <button\n        type=\"button\"\n        className={`inline-flex items-center justify-center rounded-md p-2 text-sm font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 ${\n          activeTool === 'map' \n            ? 'bg-blue-100 text-blue-600 dark:bg-blue-900 dark:text-blue-300' \n            : 'text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-800'\n        }`}\n        onClick={() => onToolSelect('map')}\n        aria-label=\"Map\"\n      >\n        <Map className=\"h-5 w-5\" />\n      </button>\n      <button\n        type=\"button\"\n        className=\"inline-flex items-center justify-center rounded-md p-2 text-sm font-medium text-gray-700 transition-colors hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:text-gray-300 dark:hover:bg-gray-800\"\n        onClick={onToggleRightPanel}\n        aria-label={isRightPanelVisible ? \"Скрыть правую панель\" : \"Показать правую панель\"}\n        title={isRightPanelVisible ? \"Скрыть правую панель\" : \"Показать правую панель\"}\n      >\n        {isRightPanelVisible ? <PanelRightClose className=\"h-5 w-5\" /> : <PanelRightOpen className=\"h-5 w-5\" />}\n      </button>\n      <button\n        type=\"button\"\n        className=\"inline-flex items-center justify-center rounded-md p-2 text-sm font-medium text-gray-700 transition-colors hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:text-gray-300 dark:hover:bg-gray-800\"\n        onClick={onResetRightPanel}\n        aria-label=\"Сбросить размер правой панели\"\n        title=\"Сбросить размер правой панели\"\n      >\n        <RotateCcw className=\"h-5 w-5\" />\n      </button>\n      <button\n        type=\"button\"\n        className=\"inline-flex items-center justify-center rounded-md p-2 text-sm font-medium text-gray-700 transition-colors hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:text-gray-300 dark:hover:bg-gray-800\"\n        onClick={onSave}\n        aria-label=\"Save\"\n        disabled={isSaving}\n      >\n        <Save className=\"h-5 w-5\" />\n      </button>\n    </div>\n  </div>\n);\n\nexport default Toolbar;\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAcA,MAAM,UAAU,CAAC,EACf,UAAU,EACV,YAAY,EACZ,MAAM,EACN,QAAQ,EACR,mBAAmB,EACnB,kBAAkB,EAClB,iBAAiB,EACJ,iBACb,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,MAAK;oBACL,WAAW,CAAC,sNAAsN,EAChO,eAAe,YACX,kEACA,6EACJ;oBACF,SAAS,IAAM,aAAa;oBAC5B,cAAW;8BAEX,cAAA,8OAAC,wMAAA,CAAA,UAAO;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAGvB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,MAAK;wBACL,WAAW,CAAC,sNAAsN,EAChO,eAAe,QACX,kEACA,6EACJ;wBACF,SAAS,IAAM,aAAa;wBAC5B,cAAW;kCAEX,cAAA,8OAAC,gMAAA,CAAA,MAAG;4BAAC,WAAU;;;;;;;;;;;kCAEjB,8OAAC;wBACC,MAAK;wBACL,WAAU;wBACV,SAAS;wBACT,cAAY,sBAAsB,yBAAyB;wBAC3D,OAAO,sBAAsB,yBAAyB;kCAErD,oCAAsB,8OAAC,gOAAA,CAAA,kBAAe;4BAAC,WAAU;;;;;iDAAe,8OAAC,8NAAA,CAAA,iBAAc;4BAAC,WAAU;;;;;;;;;;;kCAE7F,8OAAC;wBACC,MAAK;wBACL,WAAU;wBACV,SAAS;wBACT,cAAW;wBACX,OAAM;kCAEN,cAAA,8OAAC,gNAAA,CAAA,YAAS;4BAAC,WAAU;;;;;;;;;;;kCAEvB,8OAAC;wBACC,MAAK;wBACL,WAAU;wBACV,SAAS;wBACT,cAAW;wBACX,UAAU;kCAEV,cAAA,8OAAC,kMAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;uCAMT","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/lib/data.ts"],"sourcesContent":["export const objectCategories = {\n    islands: \"Остров\",\n    start: \"Старт\",\n    fruits: \"Фрукты\",\n    stones: \"Камни\",\n    water: \"Вода\",\n    trees: \"Деревья\",\n    finish: \"Финиш\",\n    extra: \"Экстра\",\n};\n\nexport const data = {\n    islands: [\n        { name: \"Остров 1\", image: \"/assets/islands/island_1.png\" },\n        { name: \"Остров 2\", image: \"/assets/islands/island_2.png\" },\n        { name: \"Остров 3\", image: \"/assets/islands/island_3.png\" },\n    ],\n    start: [\n        { name: \"Корова\", image: \"/assets/hero/hero_cow.png\" },\n        { name: \"Кот\", image: \"/assets/hero/hero_cat.png\" },\n    ],\n    fruits: [\n        { name: \"Яблоко\", image: \"/assets/fruits/apple.png\" },\n        { name: \"Банан\", image: \"/assets/fruits/banana.png\" },\n        { name: \"Ягода\", image: \"/assets/fruits/berry.png\" },\n        { name: \"Капуста\", image: \"/assets/fruits/cabbage.png\" },\n        { name: \"Морковь\", image: \"/assets/fruits/carrot.png\" },\n        { name: \"Виноград\", image: \"/assets/fruits/grape.png\" },\n    ],\n    stones: [\n        { name: \"Камень 1\", image: \"/assets/stones/stone_1.png\" },\n        { name: \"Камень 2\", image: \"/assets/stones/stone_2.png\" },\n        { name: \"Камень 3\", image: \"/assets/stones/stone_3.png\" },\n    ],\n    water: [\n        { name: \"Вода 1\", image: \"/assets/water/water_1.png\" },\n        { name: \"Вода 2\", image: \"/assets/water/water_2.png\" },\n        { name: \"Вода 3\", image: \"/assets/water/water_3.png\" },\n        { name: \"Вода 4\", image: \"/assets/water/water_4.png\" },\n    ],\n    trees: [\n        { name: \"Дерево 1\", image: \"/assets/trees/tree_1.png\" },\n        { name: \"Дерево 2\", image: \"/assets/trees/tree_2.png\" },\n        { name: \"Дерево 3\", image: \"/assets/trees/tree_3.png\" },\n        { name: \"Дерево 4\", image: \"/assets/trees/tree_4.png\" },\n    ],\n    finish: [{ name: \"Финиш 1\", image: \"/assets/finish/finish_1.png\" }],\n    extra: [{ name: \"Экстра 1\", image: \"/assets/extra/extra_1.png\" }],\n}; "],"names":[],"mappings":";;;;AAAO,MAAM,mBAAmB;IAC5B,SAAS;IACT,OAAO;IACP,QAAQ;IACR,QAAQ;IACR,OAAO;IACP,OAAO;IACP,QAAQ;IACR,OAAO;AACX;AAEO,MAAM,OAAO;IAChB,SAAS;QACL;YAAE,MAAM;YAAY,OAAO;QAA+B;QAC1D;YAAE,MAAM;YAAY,OAAO;QAA+B;QAC1D;YAAE,MAAM;YAAY,OAAO;QAA+B;KAC7D;IACD,OAAO;QACH;YAAE,MAAM;YAAU,OAAO;QAA4B;QACrD;YAAE,MAAM;YAAO,OAAO;QAA4B;KACrD;IACD,QAAQ;QACJ;YAAE,MAAM;YAAU,OAAO;QAA2B;QACpD;YAAE,MAAM;YAAS,OAAO;QAA4B;QACpD;YAAE,MAAM;YAAS,OAAO;QAA2B;QACnD;YAAE,MAAM;YAAW,OAAO;QAA6B;QACvD;YAAE,MAAM;YAAW,OAAO;QAA4B;QACtD;YAAE,MAAM;YAAY,OAAO;QAA2B;KACzD;IACD,QAAQ;QACJ;YAAE,MAAM;YAAY,OAAO;QAA6B;QACxD;YAAE,MAAM;YAAY,OAAO;QAA6B;QACxD;YAAE,MAAM;YAAY,OAAO;QAA6B;KAC3D;IACD,OAAO;QACH;YAAE,MAAM;YAAU,OAAO;QAA4B;QACrD;YAAE,MAAM;YAAU,OAAO;QAA4B;QACrD;YAAE,MAAM;YAAU,OAAO;QAA4B;QACrD;YAAE,MAAM;YAAU,OAAO;QAA4B;KACxD;IACD,OAAO;QACH;YAAE,MAAM;YAAY,OAAO;QAA2B;QACtD;YAAE,MAAM;YAAY,OAAO;QAA2B;QACtD;YAAE,MAAM;YAAY,OAAO;QAA2B;QACtD;YAAE,MAAM;YAAY,OAAO;QAA2B;KACzD;IACD,QAAQ;QAAC;YAAE,MAAM;YAAW,OAAO;QAA8B;KAAE;IACnE,OAAO;QAAC;YAAE,MAAM;YAAY,OAAO;QAA4B;KAAE;AACrE","debugId":null}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,8OAAC,iKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 406, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"peer border-input dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"flex items-center justify-center text-current transition-none\"\n      >\n        <CheckIcon className=\"size-3.5\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  )\n}\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACiD;IACpD,qBACE,8OAAC,oKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+eACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;sBAEV,cAAA,8OAAC,wMAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI7B","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACkD;IACrD,qBACE,8OAAC,qKAAA,CAAA,OAAuB;QACtB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 481, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/LeftPanel.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Levels, PlacingObject } from '@/app/page';\nimport { data, objectCategories } from '@/lib/data';\nimport Image from 'next/image';\nimport { ObjectCategory } from './RightPanel';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Separator } from '@/components/ui/separator';\nimport { cn } from '@/lib/utils';\n\nconst SIZABLE_CATEGORIES: ObjectCategory[] = ['fruits', 'stones', 'water', 'trees', 'finish', 'extra'];\nconst SINGULAR_RUSSIAN_MAP: Partial<Record<ObjectCategory, string>> = {\n    fruits: 'фрукт',\n    stones: 'камень',\n    trees: 'дерево',\n    finish: 'финиш',\n    extra: 'экстра',\n    water: 'объект',\n};\nconst SINGULAR_ENGLISH_MAP: Partial<Record<ObjectCategory, string>> = {\n    fruits: 'fruit',\n    stones: 'stone',\n    trees: 'tree',\n    finish: 'finish',\n    extra: 'extra',\n    water: 'water',\n};\n\nexport type LeftPanelContent = 'islands' | 'settings' | 'levels' | ObjectCategory | null;\n\ninterface LeftPanelProps {\n  content: LeftPanelContent;\n  setContent: (content: LeftPanelContent) => void;\n  levels: Levels;\n  currentLevelName: string;\n  loadLevel: (name: string) => void;\n  onCreateLevel: () => void;\n  canvasSize: { width: number; height: number };\n  setCanvasSize: (size: { width: number; height: number }) => void;\n  placingObject: PlacingObject | null;\n  setPlacingObject: (obj: PlacingObject | null) => void;\n  fruitDimensions: Record<string, { width: number; height: number }>;\n  onFruitDimensionChange: (name: string, size: { width: number; height: number }) => void;\n  stoneDimensions: Record<string, { width: number; height: number }>;\n  onStoneDimensionChange: (name: string, size: { width: number; height: number }) => void;\n  waterDimensions: Record<string, { width: number; height: number }>;\n  onWaterDimensionChange: (name: string, size: { width: number; height: number }) => void;\n  treeDimensions: Record<string, { width: number; height: number }>;\n  onTreeDimensionChange: (name: string, size: { width: number; height: number }) => void;\n  finishDimensions: Record<string, { width: number; height: number }>;\n  onFinishDimensionChange: (name: string, size: { width: number; height: number }) => void;\n  extraDimensions: Record<string, { width: number; height: number }>;\n  onExtraDimensionChange: (name: string, size: { width: number; height: number }) => void;\n}\n\nconst LeftPanel: React.FC<LeftPanelProps> = ({\n  content,\n  setContent,\n  levels,\n  currentLevelName,\n  loadLevel,\n  onCreateLevel,\n  canvasSize,\n  setCanvasSize,\n  placingObject,\n  setPlacingObject,\n  fruitDimensions,\n  onFruitDimensionChange,\n  stoneDimensions,\n  onStoneDimensionChange,\n  waterDimensions,\n  onWaterDimensionChange,\n  treeDimensions,\n  onTreeDimensionChange,\n  finishDimensions,\n  onFinishDimensionChange,\n  extraDimensions,\n  onExtraDimensionChange,\n}) => {\n  const [selectedCategory, setSelectedCategory] = useState<ObjectCategory | null>('islands');\n  const [selectedItemForSizing, setSelectedItemForSizing] = useState<string | null>(null);\n  const [keepAspectRatio, setKeepAspectRatio] = useState(true);\n  const [itemSize, setItemSize] = useState<{ width: number; height: number }>({ width: 0, height: 0 });\n\n  useEffect(() => {\n    setSelectedItemForSizing(null);\n  }, [selectedCategory]);\n\n  const handleItemClick = (item: { name: string; image: string }) => {\n    if (placingObject?.name === item.name) {\n      setPlacingObject(null);\n      setSelectedItemForSizing(null);\n    } else {\n      const img = new window.Image();\n      img.src = item.image;\n      img.onload = () => {\n        let width, height;\n        const isFruit = selectedCategory === 'fruits';\n        const isStone = selectedCategory === 'stones';\n        const isWater = selectedCategory === 'water';\n        const isTree = selectedCategory === 'trees';\n        const isFinish = selectedCategory === 'finish';\n        const isExtra = selectedCategory === 'extra';\n        \n        let dimensions = fruitDimensions;\n        if (isStone) dimensions = stoneDimensions;\n        if (isWater) dimensions = waterDimensions;\n        if (isTree) dimensions = treeDimensions;\n        if (isFinish) dimensions = finishDimensions;\n        if (isExtra) dimensions = extraDimensions;\n\n        const savedDim = dimensions[item.name];\n\n        if ((isFruit || isStone || isWater || isTree || isFinish || isExtra) && savedDim) {\n          width = savedDim.width;\n          height = savedDim.height;\n        } else if (isFruit || isStone || isWater || isTree || isFinish || isExtra) {\n          width = 64;\n          height = 64;\n        } else {\n          const MAX_DIM = 128;\n          const scale = Math.min(1, MAX_DIM / img.naturalWidth, MAX_DIM / img.naturalHeight);\n          width = img.naturalWidth * scale;\n          height = img.naturalHeight * scale;\n        }\n\n        setPlacingObject({\n          ...item,\n          width,\n          height,\n          originalWidth: img.naturalWidth,\n          originalHeight: img.naturalHeight,\n        } as PlacingObject);\n\n        if (isFruit || isStone || isWater || isTree || isFinish || isExtra) {\n          setSelectedItemForSizing(item.name);\n          setItemSize({ width, height });\n        } else {\n          setSelectedItemForSizing(null);\n        }\n      };\n    }\n  };\n\n  const handleSizeChange = (key: 'width' | 'height', value: string | number) => {\n    const numValue = Number(value);\n    if (!isNaN(numValue) && numValue > 0) {\n      setCanvasSize({ ...canvasSize, [key]: numValue });\n    }\n  };\n\n  const handleDimensionChange = (\n    key: 'width' | 'height',\n    value: string | number,\n    category: 'fruits' | 'stones' | 'water' | 'trees' | 'finish' | 'extra'\n  ) => {\n    const numValue = Number(value);\n    if (selectedItemForSizing && !isNaN(numValue) && numValue > 0) {\n      if (keepAspectRatio) {\n        const dimensions = { fruitDimensions, stoneDimensions, waterDimensions, treeDimensions, finishDimensions, extraDimensions };\n        const dimKey = `${category}Dimensions` as keyof typeof dimensions;\n        const originalDim = dimensions[dimKey][selectedItemForSizing];\n        const ratio = originalDim ? originalDim.width / originalDim.height : 1;\n\n        if (key === 'width') {\n          setItemSize({ width: numValue, height: Math.round(numValue / ratio) });\n        } else {\n          setItemSize({ width: Math.round(numValue * ratio), height: numValue });\n        }\n      } else {\n        setItemSize((prev) => ({ ...prev, [key]: numValue }));\n      }\n    }\n  };\n\n  const handleDimensionSave = () => {\n    if (selectedItemForSizing && selectedCategory) {\n      const changeHandlers = {\n        fruits: onFruitDimensionChange,\n        stones: onStoneDimensionChange,\n        water: onWaterDimensionChange,\n        trees: onTreeDimensionChange,\n        finish: onFinishDimensionChange,\n        extra: onExtraDimensionChange,\n      };\n      const handler = changeHandlers[selectedCategory as keyof typeof changeHandlers];\n      if (handler) {\n        handler(selectedItemForSizing, itemSize);\n      }\n    }\n  };\n\n  const renderContent = () => {\n    if (content === 'levels') {\n      return (\n        <div className=\"p-4 flex flex-col space-y-2\">\n          <Button onClick={onCreateLevel} className=\"w-full\">\n            Создать новый уровень\n          </Button>\n          <div className=\"flex flex-col space-y-1 mt-2\">\n            {Object.keys(levels).map((name) => (\n              <Button\n                key={name}\n                variant={currentLevelName === name ? 'secondary' : 'ghost'}\n                onClick={() => loadLevel(name)}\n                className=\"w-full justify-start\"\n              >\n                {name}\n              </Button>\n            ))}\n          </div>\n        </div>\n      );\n    }\n    \n    if (content === 'settings') {\n      return (\n        <div className=\"p-4 flex flex-col space-y-4\">\n          <h3 className=\"text-lg font-medium\">Настройки</h3>\n          <div className=\"grid gap-2\">\n            <Label htmlFor=\"canvas-width\">Ширина</Label>\n            <Input\n              id=\"canvas-width\"\n              type=\"number\"\n              value={canvasSize.width}\n              onChange={(e) => handleSizeChange('width', e.target.value)}\n            />\n          </div>\n          <div className=\"grid gap-2\">\n            <Label htmlFor=\"canvas-height\">Высота</Label>\n            <Input\n              id=\"canvas-height\"\n              type=\"number\"\n              value={canvasSize.height}\n              onChange={(e) => handleSizeChange('height', e.target.value)}\n            />\n          </div>\n        </div>\n      );\n    }\n\n    const categoryData = selectedCategory ? data[selectedCategory] : null;\n    const isSizable = selectedCategory && SIZABLE_CATEGORIES.includes(selectedCategory);\n\n    const randomItemName = selectedCategory ? `random_${SINGULAR_ENGLISH_MAP[selectedCategory] || selectedCategory}` : '';\n    const randomItemImage = selectedCategory ? `/assets/${selectedCategory}/random_${SINGULAR_ENGLISH_MAP[selectedCategory] || selectedCategory}.png` : '';\n    const randomItemAltText = selectedCategory ? `Случайный ${SINGULAR_RUSSIAN_MAP[selectedCategory] || objectCategories[selectedCategory]}` : '';\n\n    return (\n      <div className=\"p-4 flex flex-col gap-4 h-full\">\n        <div>\n          <h3 className=\"text-lg font-medium mb-4\">Элементы</h3>\n          <div className=\"flex flex-wrap gap-2\">\n            {Object.entries(objectCategories).map(([key, name]) => (\n              <Button\n                key={key}\n                variant={selectedCategory === key ? 'secondary' : 'outline'}\n                size=\"sm\"\n                onClick={() => setSelectedCategory(key as ObjectCategory)}\n              >\n                {name}\n              </Button>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"flex-grow overflow-y-auto\">\n          {selectedCategory && categoryData && (\n            <>\n              <Separator />\n              <div>\n                <h3 className=\"text-lg font-medium capitalize mt-6 mb-4\">\n                  {objectCategories[selectedCategory]}\n                </h3>\n                <div className=\"grid grid-cols-3 gap-2\">\n                  {categoryData.map((item: any) => (\n                    <button\n                      key={item.name}\n                      className={cn(\n                        'p-2 rounded-md border-2 hover:bg-accent',\n                        placingObject?.name === item.name ? 'border-primary' : 'border-transparent'\n                      )}\n                      onClick={() => handleItemClick(item)}\n                    >\n                      <div className=\"flex flex-col items-center gap-1\">\n                        <Image src={item.image} alt={item.name} width={56} height={56} />\n                      </div>\n                    </button>\n                  ))}\n                  {isSizable && selectedCategory && (\n                    <button\n                      key={randomItemName}\n                      className={cn(\n                        'p-2 rounded-md border-2 hover:bg-accent',\n                        placingObject?.name === randomItemName ? 'border-primary' : 'border-transparent'\n                      )}\n                      onClick={() => {\n                        if (placingObject?.name === randomItemName) {\n                          setPlacingObject(null);\n                          setSelectedItemForSizing(null);\n                        } else {\n                          const allDimensions = {\n                              fruits: fruitDimensions,\n                              stones: stoneDimensions,\n                              water: waterDimensions,\n                              trees: treeDimensions,\n                              finish: finishDimensions,\n                              extra: extraDimensions,\n                          };\n                          const categoryKey = selectedCategory as keyof typeof allDimensions;\n                          const categoryDimensions = allDimensions[categoryKey];\n                          const savedDim = categoryDimensions ? categoryDimensions[randomItemName] : undefined;\n\n                          const width = savedDim?.width || 64;\n                          const height = savedDim?.height || 64;\n                          setPlacingObject({\n                            name: randomItemName,\n                            image: randomItemImage,\n                            width,\n                            height,\n                            originalWidth: width,\n                            originalHeight: height,\n                          });\n                          setSelectedItemForSizing(randomItemName);\n                        }\n                      }}\n                    >\n                      <div className=\"flex flex-col items-center gap-1\">\n                        <Image src={randomItemImage} alt={randomItemAltText} width={56} height={56} />\n                      </div>\n                    </button>\n                  )}\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n\n        {selectedItemForSizing && (selectedCategory === 'fruits' || selectedCategory === 'stones' || selectedCategory === 'water' || selectedCategory === 'trees' || selectedCategory === 'finish' || selectedCategory === 'extra') && (\n          <div>\n            <Separator />\n            <h3 className=\"text-lg font-medium capitalize mt-6 mb-4\">\n              Размер для: {selectedItemForSizing}\n            </h3>\n            <div className=\"flex gap-4\">\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"item-width\">Ширина</Label>\n                <Input\n                  id=\"item-width\"\n                  type=\"number\"\n                  value={itemSize.width}\n                  onChange={(e) =>\n                    handleDimensionChange(\n                      'width',\n                      e.target.value,\n                      selectedCategory as 'fruits' | 'stones' | 'water' | 'trees' | 'finish' | 'extra'\n                    )\n                  }\n                />\n              </div>\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"item-height\">Высота</Label>\n                <Input\n                  id=\"item-height\"\n                  type=\"number\"\n                  value={itemSize.height}\n                  onChange={(e) =>\n                    handleDimensionChange(\n                      'height',\n                      e.target.value,\n                      selectedCategory as 'fruits' | 'stones' | 'water' | 'trees' | 'finish' | 'extra'\n                    )\n                  }\n                />\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-2 mt-4\">\n              <Checkbox\n                id=\"keep-aspect-ratio\"\n                checked={keepAspectRatio}\n                onCheckedChange={(checked) => setKeepAspectRatio(Boolean(checked))}\n              />\n              <Label htmlFor=\"keep-aspect-ratio\">Сохранять пропорции</Label>\n            </div>\n            <Button className=\"mt-4\" onClick={handleDimensionSave}>Сохранить</Button>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return <div className=\"py-2\">{renderContent()}</div>;\n};\n\nexport default LeftPanel;\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAEA,MAAM,qBAAuC;IAAC;IAAU;IAAU;IAAS;IAAS;IAAU;CAAQ;AACtG,MAAM,uBAAgE;IAClE,QAAQ;IACR,QAAQ;IACR,OAAO;IACP,QAAQ;IACR,OAAO;IACP,OAAO;AACX;AACA,MAAM,uBAAgE;IAClE,QAAQ;IACR,QAAQ;IACR,OAAO;IACP,QAAQ;IACR,OAAO;IACP,OAAO;AACX;AA6BA,MAAM,YAAsC,CAAC,EAC3C,OAAO,EACP,UAAU,EACV,MAAM,EACN,gBAAgB,EAChB,SAAS,EACT,aAAa,EACb,UAAU,EACV,aAAa,EACb,aAAa,EACb,gBAAgB,EAChB,eAAe,EACf,sBAAsB,EACtB,eAAe,EACf,sBAAsB,EACtB,eAAe,EACf,sBAAsB,EACtB,cAAc,EACd,qBAAqB,EACrB,gBAAgB,EAChB,uBAAuB,EACvB,eAAe,EACf,sBAAsB,EACvB;IACC,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAyB;IAChF,MAAM,CAAC,uBAAuB,yBAAyB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClF,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqC;QAAE,OAAO;QAAG,QAAQ;IAAE;IAElG,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,yBAAyB;IAC3B,GAAG;QAAC;KAAiB;IAErB,MAAM,kBAAkB,CAAC;QACvB,IAAI,eAAe,SAAS,KAAK,IAAI,EAAE;YACrC,iBAAiB;YACjB,yBAAyB;QAC3B,OAAO;YACL,MAAM,MAAM,IAAI,OAAO,KAAK;YAC5B,IAAI,GAAG,GAAG,KAAK,KAAK;YACpB,IAAI,MAAM,GAAG;gBACX,IAAI,OAAO;gBACX,MAAM,UAAU,qBAAqB;gBACrC,MAAM,UAAU,qBAAqB;gBACrC,MAAM,UAAU,qBAAqB;gBACrC,MAAM,SAAS,qBAAqB;gBACpC,MAAM,WAAW,qBAAqB;gBACtC,MAAM,UAAU,qBAAqB;gBAErC,IAAI,aAAa;gBACjB,IAAI,SAAS,aAAa;gBAC1B,IAAI,SAAS,aAAa;gBAC1B,IAAI,QAAQ,aAAa;gBACzB,IAAI,UAAU,aAAa;gBAC3B,IAAI,SAAS,aAAa;gBAE1B,MAAM,WAAW,UAAU,CAAC,KAAK,IAAI,CAAC;gBAEtC,IAAI,CAAC,WAAW,WAAW,WAAW,UAAU,YAAY,OAAO,KAAK,UAAU;oBAChF,QAAQ,SAAS,KAAK;oBACtB,SAAS,SAAS,MAAM;gBAC1B,OAAO,IAAI,WAAW,WAAW,WAAW,UAAU,YAAY,SAAS;oBACzE,QAAQ;oBACR,SAAS;gBACX,OAAO;oBACL,MAAM,UAAU;oBAChB,MAAM,QAAQ,KAAK,GAAG,CAAC,GAAG,UAAU,IAAI,YAAY,EAAE,UAAU,IAAI,aAAa;oBACjF,QAAQ,IAAI,YAAY,GAAG;oBAC3B,SAAS,IAAI,aAAa,GAAG;gBAC/B;gBAEA,iBAAiB;oBACf,GAAG,IAAI;oBACP;oBACA;oBACA,eAAe,IAAI,YAAY;oBAC/B,gBAAgB,IAAI,aAAa;gBACnC;gBAEA,IAAI,WAAW,WAAW,WAAW,UAAU,YAAY,SAAS;oBAClE,yBAAyB,KAAK,IAAI;oBAClC,YAAY;wBAAE;wBAAO;oBAAO;gBAC9B,OAAO;oBACL,yBAAyB;gBAC3B;YACF;QACF;IACF;IAEA,MAAM,mBAAmB,CAAC,KAAyB;QACjD,MAAM,WAAW,OAAO;QACxB,IAAI,CAAC,MAAM,aAAa,WAAW,GAAG;YACpC,cAAc;gBAAE,GAAG,UAAU;gBAAE,CAAC,IAAI,EAAE;YAAS;QACjD;IACF;IAEA,MAAM,wBAAwB,CAC5B,KACA,OACA;QAEA,MAAM,WAAW,OAAO;QACxB,IAAI,yBAAyB,CAAC,MAAM,aAAa,WAAW,GAAG;YAC7D,IAAI,iBAAiB;gBACnB,MAAM,aAAa;oBAAE;oBAAiB;oBAAiB;oBAAiB;oBAAgB;oBAAkB;gBAAgB;gBAC1H,MAAM,SAAS,GAAG,SAAS,UAAU,CAAC;gBACtC,MAAM,cAAc,UAAU,CAAC,OAAO,CAAC,sBAAsB;gBAC7D,MAAM,QAAQ,cAAc,YAAY,KAAK,GAAG,YAAY,MAAM,GAAG;gBAErE,IAAI,QAAQ,SAAS;oBACnB,YAAY;wBAAE,OAAO;wBAAU,QAAQ,KAAK,KAAK,CAAC,WAAW;oBAAO;gBACtE,OAAO;oBACL,YAAY;wBAAE,OAAO,KAAK,KAAK,CAAC,WAAW;wBAAQ,QAAQ;oBAAS;gBACtE;YACF,OAAO;gBACL,YAAY,CAAC,OAAS,CAAC;wBAAE,GAAG,IAAI;wBAAE,CAAC,IAAI,EAAE;oBAAS,CAAC;YACrD;QACF;IACF;IAEA,MAAM,sBAAsB;QAC1B,IAAI,yBAAyB,kBAAkB;YAC7C,MAAM,iBAAiB;gBACrB,QAAQ;gBACR,QAAQ;gBACR,OAAO;gBACP,OAAO;gBACP,QAAQ;gBACR,OAAO;YACT;YACA,MAAM,UAAU,cAAc,CAAC,iBAAgD;YAC/E,IAAI,SAAS;gBACX,QAAQ,uBAAuB;YACjC;QACF;IACF;IAEA,MAAM,gBAAgB;QACpB,IAAI,YAAY,UAAU;YACxB,qBACE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,kIAAA,CAAA,SAAM;wBAAC,SAAS;wBAAe,WAAU;kCAAS;;;;;;kCAGnD,8OAAC;wBAAI,WAAU;kCACZ,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,qBACxB,8OAAC,kIAAA,CAAA,SAAM;gCAEL,SAAS,qBAAqB,OAAO,cAAc;gCACnD,SAAS,IAAM,UAAU;gCACzB,WAAU;0CAET;+BALI;;;;;;;;;;;;;;;;QAWjB;QAEA,IAAI,YAAY,YAAY;YAC1B,qBACE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAsB;;;;;;kCACpC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,iIAAA,CAAA,QAAK;gCAAC,SAAQ;0CAAe;;;;;;0CAC9B,8OAAC,iIAAA,CAAA,QAAK;gCACJ,IAAG;gCACH,MAAK;gCACL,OAAO,WAAW,KAAK;gCACvB,UAAU,CAAC,IAAM,iBAAiB,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;kCAG7D,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,iIAAA,CAAA,QAAK;gCAAC,SAAQ;0CAAgB;;;;;;0CAC/B,8OAAC,iIAAA,CAAA,QAAK;gCACJ,IAAG;gCACH,MAAK;gCACL,OAAO,WAAW,MAAM;gCACxB,UAAU,CAAC,IAAM,iBAAiB,UAAU,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;;QAKpE;QAEA,MAAM,eAAe,mBAAmB,kHAAA,CAAA,OAAI,CAAC,iBAAiB,GAAG;QACjE,MAAM,YAAY,oBAAoB,mBAAmB,QAAQ,CAAC;QAElE,MAAM,iBAAiB,mBAAmB,CAAC,OAAO,EAAE,oBAAoB,CAAC,iBAAiB,IAAI,kBAAkB,GAAG;QACnH,MAAM,kBAAkB,mBAAmB,CAAC,QAAQ,EAAE,iBAAiB,QAAQ,EAAE,oBAAoB,CAAC,iBAAiB,IAAI,iBAAiB,IAAI,CAAC,GAAG;QACpJ,MAAM,oBAAoB,mBAAmB,CAAC,UAAU,EAAE,oBAAoB,CAAC,iBAAiB,IAAI,kHAAA,CAAA,mBAAgB,CAAC,iBAAiB,EAAE,GAAG;QAE3I,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;;sCACC,8OAAC;4BAAG,WAAU;sCAA2B;;;;;;sCACzC,8OAAC;4BAAI,WAAU;sCACZ,OAAO,OAAO,CAAC,kHAAA,CAAA,mBAAgB,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,KAAK,iBAChD,8OAAC,kIAAA,CAAA,SAAM;oCAEL,SAAS,qBAAqB,MAAM,cAAc;oCAClD,MAAK;oCACL,SAAS,IAAM,oBAAoB;8CAElC;mCALI;;;;;;;;;;;;;;;;8BAWb,8OAAC;oBAAI,WAAU;8BACZ,oBAAoB,8BACnB;;0CACE,8OAAC,qIAAA,CAAA,YAAS;;;;;0CACV,8OAAC;;kDACC,8OAAC;wCAAG,WAAU;kDACX,kHAAA,CAAA,mBAAgB,CAAC,iBAAiB;;;;;;kDAErC,8OAAC;wCAAI,WAAU;;4CACZ,aAAa,GAAG,CAAC,CAAC,qBACjB,8OAAC;oDAEC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2CACA,eAAe,SAAS,KAAK,IAAI,GAAG,mBAAmB;oDAEzD,SAAS,IAAM,gBAAgB;8DAE/B,cAAA,8OAAC;wDAAI,WAAU;kEACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;4DAAC,KAAK,KAAK,KAAK;4DAAE,KAAK,KAAK,IAAI;4DAAE,OAAO;4DAAI,QAAQ;;;;;;;;;;;mDARxD,KAAK,IAAI;;;;;4CAYjB,aAAa,kCACZ,8OAAC;gDAEC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2CACA,eAAe,SAAS,iBAAiB,mBAAmB;gDAE9D,SAAS;oDACP,IAAI,eAAe,SAAS,gBAAgB;wDAC1C,iBAAiB;wDACjB,yBAAyB;oDAC3B,OAAO;wDACL,MAAM,gBAAgB;4DAClB,QAAQ;4DACR,QAAQ;4DACR,OAAO;4DACP,OAAO;4DACP,QAAQ;4DACR,OAAO;wDACX;wDACA,MAAM,cAAc;wDACpB,MAAM,qBAAqB,aAAa,CAAC,YAAY;wDACrD,MAAM,WAAW,qBAAqB,kBAAkB,CAAC,eAAe,GAAG;wDAE3E,MAAM,QAAQ,UAAU,SAAS;wDACjC,MAAM,SAAS,UAAU,UAAU;wDACnC,iBAAiB;4DACf,MAAM;4DACN,OAAO;4DACP;4DACA;4DACA,eAAe;4DACf,gBAAgB;wDAClB;wDACA,yBAAyB;oDAC3B;gDACF;0DAEA,cAAA,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;wDAAC,KAAK;wDAAiB,KAAK;wDAAmB,OAAO;wDAAI,QAAQ;;;;;;;;;;;+CArCrE;;;;;;;;;;;;;;;;;;;;;;;;gBA+ClB,yBAAyB,CAAC,qBAAqB,YAAY,qBAAqB,YAAY,qBAAqB,WAAW,qBAAqB,WAAW,qBAAqB,YAAY,qBAAqB,OAAO,mBACxN,8OAAC;;sCACC,8OAAC,qIAAA,CAAA,YAAS;;;;;sCACV,8OAAC;4BAAG,WAAU;;gCAA2C;gCAC1C;;;;;;;sCAEf,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,iIAAA,CAAA,QAAK;4CAAC,SAAQ;sDAAa;;;;;;sDAC5B,8OAAC,iIAAA,CAAA,QAAK;4CACJ,IAAG;4CACH,MAAK;4CACL,OAAO,SAAS,KAAK;4CACrB,UAAU,CAAC,IACT,sBACE,SACA,EAAE,MAAM,CAAC,KAAK,EACd;;;;;;;;;;;;8CAKR,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,iIAAA,CAAA,QAAK;4CAAC,SAAQ;sDAAc;;;;;;sDAC7B,8OAAC,iIAAA,CAAA,QAAK;4CACJ,IAAG;4CACH,MAAK;4CACL,OAAO,SAAS,MAAM;4CACtB,UAAU,CAAC,IACT,sBACE,UACA,EAAE,MAAM,CAAC,KAAK,EACd;;;;;;;;;;;;;;;;;;sCAMV,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,oIAAA,CAAA,WAAQ;oCACP,IAAG;oCACH,SAAS;oCACT,iBAAiB,CAAC,UAAY,mBAAmB,QAAQ;;;;;;8CAE3D,8OAAC,iIAAA,CAAA,QAAK;oCAAC,SAAQ;8CAAoB;;;;;;;;;;;;sCAErC,8OAAC,kIAAA,CAAA,SAAM;4BAAC,WAAU;4BAAO,SAAS;sCAAqB;;;;;;;;;;;;;;;;;;IAKjE;IAEA,qBAAO,8OAAC;QAAI,WAAU;kBAAQ;;;;;;AAChC;uCAEe","debugId":null}},
    {"offset": {"line": 1069, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1133, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/ObjectTree.tsx"],"sourcesContent":["import React from 'react';\nimport { MapObject } from '@/app/page';\nimport { Button } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\n\ninterface ObjectTreeProps {\n  objects: MapObject[];\n  onSelectObject: (object: MapObject) => void;\n  selectedObject: MapObject | null;\n}\n\nconst ObjectTree: React.FC<ObjectTreeProps> = ({ objects, onSelectObject, selectedObject }) => {\n  const buildTree = (items: MapObject[]): MapObject[] => {\n    const itemMap = new Map<string, MapObject>();\n    items.forEach(item => {\n      itemMap.set(item.id, { ...item, children: [] });\n    });\n\n    const tree: MapObject[] = [];\n    items.forEach(item => {\n      if (item.parentId && itemMap.has(item.parentId)) {\n        const parent = itemMap.get(item.parentId);\n        parent?.children?.push(itemMap.get(item.id)!);\n      } else {\n        tree.push(itemMap.get(item.id)!);\n      }\n    });\n\n    return tree;\n  };\n\n  const objectTree = buildTree(objects);\n\n  const renderTree = (nodes: MapObject[]) => (\n    <div className=\"pl-4\">\n      {nodes.map(node => (\n        <div key={node.id}>\n          <Button\n            variant=\"ghost\"\n            onClick={() => onSelectObject(node)}\n            className={cn(\n              'w-full justify-start px-2 py-1 h-auto',\n              selectedObject?.id === node.id && 'bg-accent text-accent-foreground'\n            )}\n          >\n            <span className=\"text-sm\">{node.name}</span>\n          </Button>\n          {node.children && node.children.length > 0 && renderTree(node.children)}\n        </div>\n      ))}\n    </div>\n  );\n\n  return (\n    <div>\n      {renderTree(objectTree)}\n    </div>\n  );\n};\n\nexport default ObjectTree; "],"names":[],"mappings":";;;;AAEA;AACA;;;;AAQA,MAAM,aAAwC,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE;IACxF,MAAM,YAAY,CAAC;QACjB,MAAM,UAAU,IAAI;QACpB,MAAM,OAAO,CAAC,CAAA;YACZ,QAAQ,GAAG,CAAC,KAAK,EAAE,EAAE;gBAAE,GAAG,IAAI;gBAAE,UAAU,EAAE;YAAC;QAC/C;QAEA,MAAM,OAAoB,EAAE;QAC5B,MAAM,OAAO,CAAC,CAAA;YACZ,IAAI,KAAK,QAAQ,IAAI,QAAQ,GAAG,CAAC,KAAK,QAAQ,GAAG;gBAC/C,MAAM,SAAS,QAAQ,GAAG,CAAC,KAAK,QAAQ;gBACxC,QAAQ,UAAU,KAAK,QAAQ,GAAG,CAAC,KAAK,EAAE;YAC5C,OAAO;gBACL,KAAK,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,EAAE;YAC/B;QACF;QAEA,OAAO;IACT;IAEA,MAAM,aAAa,UAAU;IAE7B,MAAM,aAAa,CAAC,sBAClB,8OAAC;YAAI,WAAU;sBACZ,MAAM,GAAG,CAAC,CAAA,qBACT,8OAAC;;sCACC,8OAAC,kIAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,SAAS,IAAM,eAAe;4BAC9B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yCACA,gBAAgB,OAAO,KAAK,EAAE,IAAI;sCAGpC,cAAA,8OAAC;gCAAK,WAAU;0CAAW,KAAK,IAAI;;;;;;;;;;;wBAErC,KAAK,QAAQ,IAAI,KAAK,QAAQ,CAAC,MAAM,GAAG,KAAK,WAAW,KAAK,QAAQ;;mBAX9D,KAAK,EAAE;;;;;;;;;;IAiBvB,qBACE,8OAAC;kBACE,WAAW;;;;;;AAGlB;uCAEe","debugId":null}},
    {"offset": {"line": 1211, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/RightPanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { MapObject } from '@/app/page';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Trash2 } from 'lucide-react';\nimport ObjectTree from './ObjectTree';\n\nexport type ObjectCategory = 'islands' | 'start' | 'fruits' | 'stones' | 'water' | 'trees' | 'finish' | 'extra';\n\ninterface RightPanelProps {\n  mapObjects: MapObject[];\n  selectedObject: MapObject | null;\n  onSelectObject: (object: MapObject) => void;\n  onUpdateObject: (updatedObject: MapObject) => void;\n  onDeleteObject: (id: string) => void;\n  leftPanelContent: 'islands' | 'settings' | 'levels' | ObjectCategory | null;\n  canvasSize: { width: number; height: number };\n  setCanvasSize: (size: { width: number; height: number }) => void;\n  keepAspectRatio: boolean;\n  setKeepAspectRatio: (value: boolean) => void;\n}\n\nconst RightPanel: React.FC<RightPanelProps> = ({\n  mapObjects,\n  selectedObject,\n  onSelectObject,\n  onUpdateObject,\n  onDeleteObject,\n  leftPanelContent,\n  canvasSize,\n  setCanvasSize,\n  keepAspectRatio,\n  setKeepAspectRatio,\n}) => {\n  const [view, setView] = useState<'properties' | 'tree'>('properties');\n\n  const handleInputChange = (id: string, value: any) => {\n    if (!selectedObject) return;\n\n    let newObject: MapObject = { ...selectedObject, [id]: value };\n\n    if (keepAspectRatio) {\n      if (id === 'width' && selectedObject.originalWidth && selectedObject.originalHeight) {\n        const aspectRatio = selectedObject.originalHeight / selectedObject.originalWidth;\n        newObject.height = Number(value) * aspectRatio;\n      } else if (id === 'height' && selectedObject.originalWidth && selectedObject.originalHeight) {\n        const aspectRatio = selectedObject.originalWidth / selectedObject.originalHeight;\n        newObject.width = Number(value) * aspectRatio;\n      } else if (id === 'widthPercent' && selectedObject.originalWidth && selectedObject.originalHeight) {\n        newObject.height = selectedObject.originalHeight * (Number(value) / 100);\n      } else if (id === 'heightPercent' && selectedObject.originalWidth && selectedObject.originalHeight) {\n        newObject.width = selectedObject.originalWidth * (Number(value) / 100);\n      }\n    }\n\n    if (id === 'widthPercent' && selectedObject.originalWidth) {\n      newObject.width = selectedObject.originalWidth * (Number(value) / 100);\n    } else if (id === 'heightPercent' && selectedObject.originalHeight) {\n      newObject.height = selectedObject.originalHeight * (Number(value) / 100);\n    }\n    \n    onUpdateObject(newObject);\n  };\n\n  const handleCanvasSizeChange = (id: 'width' | 'height', value: number | string) => {\n    const newSize = {\n      ...canvasSize,\n      [id]: Number(value) || 0,\n    };\n    setCanvasSize(newSize);\n  };\n\n  if (leftPanelContent === 'levels') {\n    return (\n      <div className=\"p-4 space-y-4\">\n        <h3 className=\"text-lg font-medium\">Размеры уровня</h3>\n        <div className=\"grid gap-2\">\n          <Label htmlFor=\"width\">Ширина</Label>\n          <Input\n            id=\"width\"\n            type=\"number\"\n            value={canvasSize.width}\n            onChange={(e) => handleCanvasSizeChange('width', e.target.value)}\n            min={100}\n          />\n        </div>\n        <div className=\"grid gap-2\">\n          <Label htmlFor=\"height\">Высота</Label>\n          <Input\n            id=\"height\"\n            type=\"number\"\n            value={canvasSize.height}\n            onChange={(e) => handleCanvasSizeChange('height', e.target.value)}\n            min={100}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-4 h-full flex flex-col\">\n      <Tabs value={view} onValueChange={(value) => setView(value as 'properties' | 'tree')} className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-2\">\n          <TabsTrigger value=\"properties\">Свойства</TabsTrigger>\n          <TabsTrigger value=\"tree\">Дерево</TabsTrigger>\n        </TabsList>\n        <TabsContent value=\"tree\" className=\"flex-grow\">\n          <div className=\"space-y-4 mt-4\">\n            <h3 className=\"text-lg font-medium\">Дерево объектов</h3>\n            <ObjectTree objects={mapObjects} onSelectObject={onSelectObject} selectedObject={selectedObject} />\n          </div>\n        </TabsContent>\n        <TabsContent value=\"properties\" className=\"flex-grow\">\n          <div className=\"space-y-4 mt-4\">\n            <div className=\"flex justify-between items-center\">\n              <h3 className=\"text-lg font-medium\">Свойства объекта</h3>\n              {selectedObject && (\n                <Button variant=\"destructive\" size=\"icon\" onClick={() => onDeleteObject(selectedObject.id)}>\n                  <Trash2 className=\"h-4 w-4\" />\n                </Button>\n              )}\n            </div>\n            \n            {!selectedObject ? (\n              <p className=\"text-muted-foreground\">Объект не выбран</p>\n            ) : (\n              <>\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"name\">Имя</Label>\n                  <Input\n                    id=\"name\"\n                    value={selectedObject.name}\n                    onChange={(event) => onUpdateObject({ ...selectedObject, name: event.currentTarget.value })}\n                  />\n                </div>\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"width\">Ширина (пикс.)</Label>\n                  <Input\n                    id=\"width\"\n                    type=\"number\"\n                    value={Math.round(selectedObject.width)}\n                    onChange={(e) => handleInputChange('width', e.target.value)}\n                    min={1}\n                  />\n                </div>\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"height\">Высота (пикс.)</Label>\n                  <Input\n                    id=\"height\"\n                    type=\"number\"\n                    value={Math.round(selectedObject.height)}\n                    onChange={(e) => handleInputChange('height', e.target.value)}\n                    min={1}\n                  />\n                </div>\n                {selectedObject.originalWidth && (\n                  <div className=\"grid gap-2\">\n                    <Label htmlFor=\"widthPercent\">Ширина (%)</Label>\n                    <Input\n                      id=\"widthPercent\"\n                      type=\"number\"\n                      value={Math.round((selectedObject.width / selectedObject.originalWidth) * 100)}\n                      onChange={(e) => handleInputChange('widthPercent', e.target.value)}\n                      min={1}\n                    />\n                  </div>\n                )}\n                {selectedObject.originalHeight && (\n                  <div className=\"grid gap-2\">\n                    <Label htmlFor=\"heightPercent\">Высота (%)</Label>\n                    <Input\n                      id=\"heightPercent\"\n                      type=\"number\"\n                      value={Math.round((selectedObject.height / selectedObject.originalHeight) * 100)}\n                      onChange={(e) => handleInputChange('heightPercent', e.target.value)}\n                      min={1}\n                    />\n                  </div>\n                )}\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox\n                    id=\"keepAspectRatio\"\n                    checked={keepAspectRatio}\n                    onCheckedChange={(checked) => setKeepAspectRatio(Boolean(checked))}\n                  />\n                  <Label htmlFor=\"keepAspectRatio\">Сохранять пропорции</Label>\n                </div>\n                <div className=\"grid grid-cols-2 gap-2\">\n                  <Button \n                    variant=\"outline\" \n                    onClick={() => onUpdateObject({ ...selectedObject, flipX: !selectedObject.flipX })}>\n                      Отразить X\n                  </Button>\n                  <Button \n                    variant=\"outline\" \n                    onClick={() => onUpdateObject({ ...selectedObject, flipY: !selectedObject.flipY })}>\n                      Отразить Y\n                  </Button>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox\n                    id=\"isLocked\"\n                    checked={selectedObject.isLocked}\n                    onCheckedChange={(checked) => handleInputChange('isLocked', Boolean(checked))}\n                  />\n                  <Label htmlFor=\"isLocked\">Заблокировать</Label>\n                </div>\n              </>\n            )}\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default RightPanel;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1722, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, useRef } from 'react';\nimport Toolbar from '@/components/Toolbar';\nimport LeftPanel from '@/components/LeftPanel';\nimport RightPanel, { ObjectCategory } from '@/components/RightPanel';\nimport dynamic from 'next/dynamic';\nimport { toast } from \"sonner\"\n\nconst Canvas = dynamic(() => import('@/components/Canvas'), {\n  ssr: false,\n  loading: () => <div className=\"flex-grow flex justify-center items-center bg-gray-100\"><p>Loading Canvas...</p></div>\n});\n\nexport interface MapObject {\n  id: string;\n  name: string;\n  image: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  originalWidth?: number;\n  originalHeight?: number;\n  flipX: boolean;\n  flipY: boolean;\n  isLocked: boolean;\n  parentId?: string;\n  children?: MapObject[];\n}\n\nexport interface PlacingObject {\n  name: string;\n  image: string;\n  width: number;\n  height: number;\n  originalWidth: number;\n  originalHeight: number;\n}\n\nexport type Tool = 'pointer' | 'placing' | 'map';\n\nexport interface Levels {\n  [key: string]: {\n    objects: MapObject[];\n    dimensions: { width: number, height: number };\n  }\n}\n\nexport default function Home() {\n  const [levels, setLevels] = useState<Levels>({});\n  const [currentLevelName, setCurrentLevelName] = useState('');\n  const [mapObjects, setMapObjects] = useState<MapObject[]>([]);\n  const [selectedObject, setSelectedObject] = useState<MapObject | null>(null);\n  const [activeTool, setActiveTool] = useState<Tool>('pointer');\n  const [leftPanelContent, setLeftPanelContent] = useState<ObjectCategory | \"levels\" | \"settings\" | \"islands\" | null>('islands');\n  const [placingObject, setPlacingObject] = useState<PlacingObject | null>(null);\n  const [keepAspectRatio, setKeepAspectRatio] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  \n  const [isRightPanelVisible, setIsRightPanelVisible] = useState(true);\n  const [rightPanelWidth, setRightPanelWidth] = useState(350);\n\n  const [canvasSize, setCanvasSize] = useState({ width: 800, height: 600 });\n  const canvasContainerRef = useRef<HTMLDivElement>(null);\n\n  const [fruitDimensions, setFruitDimensions] = useState<Record<string, { width: number; height: number }>>({});\n  const [stoneDimensions, setStoneDimensions] = useState<Record<string, { width: number; height: number }>>({});\n  const [waterDimensions, setWaterDimensions] = useState<Record<string, { width: number; height: number }>>({});\n  const [treeDimensions, setTreeDimensions] = useState<Record<string, { width: number; height: number }>>({});\n  const [finishDimensions, setFinishDimensions] = useState<Record<string, { width: number; height: number }>>({});\n  const [extraDimensions, setExtraDimensions] = useState<Record<string, { width: number; height: number }>>({});\n\n  const fetchLevels = async () => {\n    const response = await fetch('/api/levels');\n    const data = await response.json();\n    setLevels(data);\n    return data;\n  };\n\n  useEffect(() => {\n    const initLevels = async () => {\n      const data = await fetchLevels();\n      const levelNames = Object.keys(data);\n      const lastOpened = localStorage.getItem('maze-editor-last-level-name');\n      if (lastOpened && data[lastOpened]) {\n        loadLevel(lastOpened, data);\n      } else if (levelNames.length > 0) {\n        loadLevel(levelNames[0], data);\n      }\n    };\n    initLevels();\n  }, []);\n\n  useEffect(() => {\n    if (activeTool === 'map') {\n      setLeftPanelContent('levels');\n    } else if (activeTool === 'pointer' && leftPanelContent === 'levels') {\n      setLeftPanelContent('islands');\n    }\n  }, [activeTool]);\n\n  useEffect(() => {\n    const savedFruitDimensions = localStorage.getItem('fruit-dimensions');\n    if (savedFruitDimensions) setFruitDimensions(JSON.parse(savedFruitDimensions));\n    const savedStoneDimensions = localStorage.getItem('stone-dimensions');\n    if (savedStoneDimensions) setStoneDimensions(JSON.parse(savedStoneDimensions));\n    const savedWaterDimensions = localStorage.getItem('water-dimensions');\n    if (savedWaterDimensions) setWaterDimensions(JSON.parse(savedWaterDimensions));\n    const savedTreeDimensions = localStorage.getItem('tree-dimensions');\n    if (savedTreeDimensions) setTreeDimensions(JSON.parse(savedTreeDimensions));\n    const savedFinishDimensions = localStorage.getItem('finish-dimensions');\n    if (savedFinishDimensions) setFinishDimensions(JSON.parse(savedFinishDimensions));\n    const savedExtraDimensions = localStorage.getItem('extra-dimensions');\n    if (savedExtraDimensions) setExtraDimensions(JSON.parse(savedExtraDimensions));\n  }, []);\n\n  useEffect(() => {\n    if (placingObject) {\n      setActiveTool('placing');\n    } else if (activeTool === 'placing') {\n      setActiveTool('pointer');\n    }\n  }, [placingObject]);\n\n  const handleSetFruitDimension = (name: string, size: { width: number; height: number }) => {\n    const newDimensions = { ...fruitDimensions, [name]: size };\n    setFruitDimensions(newDimensions);\n    localStorage.setItem('fruit-dimensions', JSON.stringify(newDimensions));\n  };\n\n  const handleSetStoneDimension = (name: string, size: { width: number; height: number }) => {\n    const newDimensions = { ...stoneDimensions, [name]: size };\n    setStoneDimensions(newDimensions);\n    localStorage.setItem('stone-dimensions', JSON.stringify(newDimensions));\n  };\n\n  const handleSetWaterDimension = (name: string, size: { width: number; height: number }) => {\n    const newDimensions = { ...waterDimensions, [name]: size };\n    setWaterDimensions(newDimensions);\n    localStorage.setItem('water-dimensions', JSON.stringify(newDimensions));\n  };\n\n  const handleSetTreeDimension = (name: string, size: { width: number; height: number }) => {\n    const newDimensions = { ...treeDimensions, [name]: size };\n    setTreeDimensions(newDimensions);\n    localStorage.setItem('tree-dimensions', JSON.stringify(newDimensions));\n  };\n\n  const handleSetFinishDimension = (name: string, size: { width: number; height: number }) => {\n    const newDimensions = { ...finishDimensions, [name]: size };\n    setFinishDimensions(newDimensions);\n    localStorage.setItem('finish-dimensions', JSON.stringify(newDimensions));\n  };\n\n  const handleSetExtraDimension = (name: string, size: { width: number; height: number }) => {\n    const newDimensions = { ...extraDimensions, [name]: size };\n    setExtraDimensions(newDimensions);\n    localStorage.setItem('extra-dimensions', JSON.stringify(newDimensions));\n  };\n\n  const loadLevel = (name: string, allLevels: Levels) => {\n    const levelData = allLevels[name];\n    if (levelData) {\n      setMapObjects(levelData.objects || []);\n      setCanvasSize(levelData.dimensions || { width: 800, height: 600 });\n      setCurrentLevelName(name);\n      setSelectedObject(null);\n      localStorage.setItem('maze-editor-last-level-name', name);\n    }\n  };\n\n  const handleCreateLevel = async () => {\n    const name = prompt(`Введите имя нового уровня:`, `Уровень ${Object.keys(levels).length + 1}`);\n    if (name) {\n        if (levels[name]) {\n            alert('Уровень с таким именем уже существует.');\n            return;\n        }\n        \n        const newLevelData = {\n            objects: [],\n            dimensions: { width: 800, height: 600 }\n        };\n\n        try {\n            await fetch('/api/save-level', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ name, data: newLevelData })\n            });\n            const updatedLevels = await fetchLevels();\n            loadLevel(name, updatedLevels);\n        } catch (error) {\n            console.error('Ошибка при создании уровня:', error);\n            alert(`Не удалось создать уровень: ${error}`);\n        }\n    }\n  };\n\n  const handleToolSelect = (tool: Tool) => {\n    if (tool === 'pointer') {\n      setPlacingObject(null);\n    }\n    setActiveTool(tool);\n  };\n\n  const handleSaveLevel = async () => {\n    if (!currentLevelName) {\n        toast.error('Ошибка', {\n          description: 'Не выбран уровень для сохранения.',\n        });\n        return;\n    }\n    setIsSaving(true);\n    const levelData = {\n        objects: mapObjects,\n        dimensions: canvasSize\n    };\n    try {\n        await fetch('/api/save-level', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ name: currentLevelName, data: levelData })\n        });\n        toast.success('Сохранено', {\n            description: `Уровень \"${currentLevelName}\" успешно сохранен.`,\n        });\n    } catch (error) {\n        console.error('Ошибка при сохранении уровня:', error);\n        toast.error('Ошибка сохранения', {\n            description: `Не удалось сохранить уровень: ${error}`,\n        });\n    } finally {\n      setIsSaving(false);\n    }\n    setSelectedObject(null);\n  };\n\n  const handleUpdateObject = (updatedAttrs: Partial<MapObject>) => {\n    if (!updatedAttrs.id) return;\n    const newMapObjects = mapObjects.map(obj => {\n      if (obj.id === updatedAttrs.id) {\n        return { ...obj, ...updatedAttrs };\n      }\n      return obj;\n    });\n    setMapObjects(newMapObjects);\n\n    if (selectedObject && selectedObject.id === updatedAttrs.id) {\n      setSelectedObject(prev => ({ ...prev!, ...updatedAttrs }));\n    }\n  };\n\n  const handleDeleteObject = (id: string) => {\n    setMapObjects(mapObjects.filter(obj => obj.id !== id));\n    setSelectedObject(null);\n  };\n\n  const handleToggleRightPanel = () => {\n    setIsRightPanelVisible(!isRightPanelVisible);\n  };\n\n  const handleResetRightPanel = () => {\n    setRightPanelWidth(350);\n    setIsRightPanelVisible(true);\n  };\n\n  const handleResizeMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const startX = e.clientX;\n    const startWidth = rightPanelWidth;\n\n    const handleMouseMove = (e: MouseEvent) => {\n      const newWidth = startWidth - (e.clientX - startX);\n      if (newWidth >= 250 && newWidth <= 600) {\n        setRightPanelWidth(newWidth);\n      }\n    };\n\n    const handleMouseUp = () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  return (\n    <div className=\"flex h-screen bg-gray-200\">\n      <div className=\"flex flex-col flex-grow\">\n        <Toolbar \n          activeTool={activeTool}\n          onToolSelect={handleToolSelect}\n          onSave={handleSaveLevel}\n          isSaving={isSaving}\n          isRightPanelVisible={isRightPanelVisible}\n          onToggleRightPanel={handleToggleRightPanel}\n          onResetRightPanel={handleResetRightPanel}\n        />\n        <div className=\"flex flex-grow overflow-hidden\">\n          <div className=\"w-[300px] bg-white dark:bg-zinc-950 border-r border-gray-300 dark:border-zinc-800 flex-shrink-0 flex flex-col\">\n            <LeftPanel\n              content={leftPanelContent}\n              setContent={setLeftPanelContent}\n              levels={levels}\n              currentLevelName={currentLevelName}\n              loadLevel={(name: string) => loadLevel(name, levels)}\n              onCreateLevel={handleCreateLevel}\n              canvasSize={canvasSize}\n              setCanvasSize={setCanvasSize}\n              placingObject={placingObject}\n              setPlacingObject={setPlacingObject}\n              fruitDimensions={fruitDimensions}\n              onFruitDimensionChange={handleSetFruitDimension}\n              stoneDimensions={stoneDimensions}\n              onStoneDimensionChange={handleSetStoneDimension}\n              waterDimensions={waterDimensions}\n              onWaterDimensionChange={handleSetWaterDimension}\n              treeDimensions={treeDimensions}\n              onTreeDimensionChange={handleSetTreeDimension}\n              finishDimensions={finishDimensions}\n              onFinishDimensionChange={handleSetFinishDimension}\n              extraDimensions={extraDimensions}\n              onExtraDimensionChange={handleSetExtraDimension}\n            />\n          </div>\n          <div ref={canvasContainerRef} className=\"flex-grow flex justify-center items-center bg-gray-100 relative overflow-auto min-w-0\">\n            <Canvas\n              mapObjects={mapObjects}\n              setMapObjects={setMapObjects}\n              selectedObject={selectedObject}\n              setSelectedObject={setSelectedObject}\n              canvasSize={canvasSize}\n              placingObject={placingObject}\n              setPlacingObject={setPlacingObject}\n              keepAspectRatio={keepAspectRatio}\n              onUpdateObject={handleUpdateObject}\n            />\n          </div>\n          \n          {isRightPanelVisible && (\n            <div\n              className=\"relative bg-white dark:bg-zinc-950 border-l-2 border-gray-300 dark:border-zinc-700 flex-shrink-0 shadow-lg\"\n              style={{ width: rightPanelWidth, minWidth: '250px', maxWidth: '600px' }}\n            >\n              <div \n                className=\"absolute top-0 bottom-0 -left-1 w-2 bg-blue-500 hover:bg-blue-600 cursor-col-resize z-10 opacity-50 hover:opacity-100 transition-opacity\"\n                onMouseDown={handleResizeMouseDown}\n                title=\"Перетащите для изменения размера панели\"\n              />\n              <RightPanel\n                mapObjects={mapObjects}\n                selectedObject={selectedObject}\n                onSelectObject={(obj: MapObject) => setSelectedObject(obj)}\n                onUpdateObject={handleUpdateObject}\n                onDeleteObject={handleDeleteObject}\n                leftPanelContent={leftPanelContent}\n                canvasSize={canvasSize}\n                setCanvasSize={setCanvasSize}\n                keepAspectRatio={keepAspectRatio}\n                setKeepAspectRatio={setKeepAspectRatio}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}
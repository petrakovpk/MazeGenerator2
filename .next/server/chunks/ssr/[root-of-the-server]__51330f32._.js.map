{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/Toolbar.tsx"],"sourcesContent":["import { Pointer, Map, Save, PanelRightOpen, PanelRightClose, RotateCcw } from 'lucide-react';\n\nexport type Tool = 'pointer' | 'placing' | 'map';\n\ninterface ToolbarProps {\n  activeTool: Tool;\n  onToolSelect: (tool: Tool) => void;\n  onSave: () => void;\n  isSaving: boolean;\n  isRightPanelVisible: boolean;\n  onToggleRightPanel: () => void;\n  onResetRightPanel: () => void;\n}\n\nconst Toolbar = ({ \n  activeTool, \n  onToolSelect, \n  onSave, \n  isSaving, \n  isRightPanelVisible, \n  onToggleRightPanel,\n  onResetRightPanel \n}: ToolbarProps) => (\n  <div className=\"navbar bg-base-100 shadow-sm border-b\">\n    <div className=\"navbar-start\">\n      <div className=\"btn-group\">\n        <button\n          className={`btn btn-sm ${activeTool === 'pointer' ? 'btn-primary' : 'btn-ghost'}`}\n          onClick={() => onToolSelect('pointer')}\n          data-tip=\"Указатель (выбор и перемещение объектов)\"\n        >\n          <Pointer className=\"h-4 w-4\" />\n        </button>\n      </div>\n    </div>\n    \n    <div className=\"navbar-end\">\n      <div className=\"btn-group\">\n        <button\n          className={`btn btn-sm ${activeTool === 'map' ? 'btn-primary' : 'btn-ghost'}`}\n          onClick={() => onToolSelect('map')}\n          data-tip=\"Редактор карты\"\n        >\n          <Map className=\"h-4 w-4\" />\n        </button>\n        \n        <div className=\"divider divider-horizontal mx-1\"></div>\n        \n        <button\n          className=\"btn btn-sm btn-ghost\"\n          onClick={onToggleRightPanel}\n          data-tip={isRightPanelVisible ? \"Скрыть правую панель\" : \"Показать правую панель\"}\n        >\n          {isRightPanelVisible ? <PanelRightClose className=\"h-4 w-4\" /> : <PanelRightOpen className=\"h-4 w-4\" />}\n        </button>\n        \n        <button\n          className=\"btn btn-sm btn-ghost\"\n          onClick={onResetRightPanel}\n          data-tip=\"Сбросить размер правой панели\"\n        >\n          <RotateCcw className=\"h-4 w-4\" />\n        </button>\n        \n        <div className=\"divider divider-horizontal mx-1\"></div>\n        \n        <button\n          className=\"btn btn-sm btn-ghost\"\n          onClick={onSave}\n          disabled={isSaving}\n          data-tip={isSaving ? \"Сохранение...\" : \"Сохранить уровень\"}\n        >\n          <Save className=\"h-4 w-4\" />\n        </button>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Toolbar;\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAcA,MAAM,UAAU,CAAC,EACf,UAAU,EACV,YAAY,EACZ,MAAM,EACN,QAAQ,EACR,mBAAmB,EACnB,kBAAkB,EAClB,iBAAiB,EACJ,iBACb,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBACC,WAAW,CAAC,WAAW,EAAE,eAAe,YAAY,gBAAgB,aAAa;wBACjF,SAAS,IAAM,aAAa;wBAC5B,YAAS;kCAET,cAAA,8OAAC,wMAAA,CAAA,UAAO;4BAAC,WAAU;;;;;;;;;;;;;;;;;;;;;0BAKzB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,WAAW,CAAC,WAAW,EAAE,eAAe,QAAQ,gBAAgB,aAAa;4BAC7E,SAAS,IAAM,aAAa;4BAC5B,YAAS;sCAET,cAAA,8OAAC,gMAAA,CAAA,MAAG;gCAAC,WAAU;;;;;;;;;;;sCAGjB,8OAAC;4BAAI,WAAU;;;;;;sCAEf,8OAAC;4BACC,WAAU;4BACV,SAAS;4BACT,YAAU,sBAAsB,yBAAyB;sCAExD,oCAAsB,8OAAC,gOAAA,CAAA,kBAAe;gCAAC,WAAU;;;;;qDAAe,8OAAC,8NAAA,CAAA,iBAAc;gCAAC,WAAU;;;;;;;;;;;sCAG7F,8OAAC;4BACC,WAAU;4BACV,SAAS;4BACT,YAAS;sCAET,cAAA,8OAAC,gNAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;;;;;;sCAGvB,8OAAC;4BAAI,WAAU;;;;;;sCAEf,8OAAC;4BACC,WAAU;4BACV,SAAS;4BACT,UAAU;4BACV,YAAU,WAAW,kBAAkB;sCAEvC,cAAA,8OAAC,kMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;uCAOX","debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/lib/data.ts"],"sourcesContent":["export const objectCategories = {\n    islands: \"Остров\",\n    start: \"Старт\",\n    fruits: \"Фрукты\",\n    stones: \"Камни\",\n    water: \"Вода\",\n    trees: \"Деревья\",\n    finish: \"Финиш\",\n    extra: \"Экстра\",\n};\n\nexport const data = {\n    islands: [\n        { name: \"Остров 1\", image: \"/assets/islands/island_1.png\" },\n        { name: \"Остров 2\", image: \"/assets/islands/island_2.png\" },\n        { name: \"Остров 3\", image: \"/assets/islands/island_3.png\" },\n    ],\n    start: [\n        { name: \"Корова\", image: \"/assets/hero/hero_cow.png\" },\n        { name: \"Кот\", image: \"/assets/hero/hero_cat.png\" },\n    ],\n    fruits: [\n        { name: \"Яблоко\", image: \"/assets/fruits/apple.png\" },\n        { name: \"Банан\", image: \"/assets/fruits/banana.png\" },\n        { name: \"Ягода\", image: \"/assets/fruits/berry.png\" },\n        { name: \"Капуста\", image: \"/assets/fruits/cabbage.png\" },\n        { name: \"Морковь\", image: \"/assets/fruits/carrot.png\" },\n        { name: \"Виноград\", image: \"/assets/fruits/grape.png\" },\n    ],\n    stones: [\n        { name: \"Камень 1\", image: \"/assets/stones/stone_1.png\" },\n        { name: \"Камень 2\", image: \"/assets/stones/stone_2.png\" },\n        { name: \"Камень 3\", image: \"/assets/stones/stone_3.png\" },\n    ],\n    water: [\n        { name: \"Вода 1\", image: \"/assets/water/water_1.png\" },\n        { name: \"Вода 2\", image: \"/assets/water/water_2.png\" },\n        { name: \"Вода 3\", image: \"/assets/water/water_3.png\" },\n        { name: \"Вода 4\", image: \"/assets/water/water_4.png\" },\n    ],\n    trees: [\n        { name: \"Дерево 1\", image: \"/assets/trees/tree_1.png\" },\n        { name: \"Дерево 2\", image: \"/assets/trees/tree_2.png\" },\n        { name: \"Дерево 3\", image: \"/assets/trees/tree_3.png\" },\n        { name: \"Дерево 4\", image: \"/assets/trees/tree_4.png\" },\n    ],\n    finish: [{ name: \"Финиш 1\", image: \"/assets/finish/finish_1.png\" }],\n    extra: [{ name: \"Экстра 1\", image: \"/assets/extra/extra_1.png\" }],\n}; "],"names":[],"mappings":";;;;AAAO,MAAM,mBAAmB;IAC5B,SAAS;IACT,OAAO;IACP,QAAQ;IACR,QAAQ;IACR,OAAO;IACP,OAAO;IACP,QAAQ;IACR,OAAO;AACX;AAEO,MAAM,OAAO;IAChB,SAAS;QACL;YAAE,MAAM;YAAY,OAAO;QAA+B;QAC1D;YAAE,MAAM;YAAY,OAAO;QAA+B;QAC1D;YAAE,MAAM;YAAY,OAAO;QAA+B;KAC7D;IACD,OAAO;QACH;YAAE,MAAM;YAAU,OAAO;QAA4B;QACrD;YAAE,MAAM;YAAO,OAAO;QAA4B;KACrD;IACD,QAAQ;QACJ;YAAE,MAAM;YAAU,OAAO;QAA2B;QACpD;YAAE,MAAM;YAAS,OAAO;QAA4B;QACpD;YAAE,MAAM;YAAS,OAAO;QAA2B;QACnD;YAAE,MAAM;YAAW,OAAO;QAA6B;QACvD;YAAE,MAAM;YAAW,OAAO;QAA4B;QACtD;YAAE,MAAM;YAAY,OAAO;QAA2B;KACzD;IACD,QAAQ;QACJ;YAAE,MAAM;YAAY,OAAO;QAA6B;QACxD;YAAE,MAAM;YAAY,OAAO;QAA6B;QACxD;YAAE,MAAM;YAAY,OAAO;QAA6B;KAC3D;IACD,OAAO;QACH;YAAE,MAAM;YAAU,OAAO;QAA4B;QACrD;YAAE,MAAM;YAAU,OAAO;QAA4B;QACrD;YAAE,MAAM;YAAU,OAAO;QAA4B;QACrD;YAAE,MAAM;YAAU,OAAO;QAA4B;KACxD;IACD,OAAO;QACH;YAAE,MAAM;YAAY,OAAO;QAA2B;QACtD;YAAE,MAAM;YAAY,OAAO;QAA2B;QACtD;YAAE,MAAM;YAAY,OAAO;QAA2B;QACtD;YAAE,MAAM;YAAY,OAAO;QAA2B;KACzD;IACD,QAAQ;QAAC;YAAE,MAAM;YAAW,OAAO;QAA8B;KAAE;IACnE,OAAO;QAAC;YAAE,MAAM;YAAY,OAAO;QAA4B;KAAE;AACrE","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/LeftPanel.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Levels, PlacingObject } from '@/app/page';\nimport { data, objectCategories } from '@/lib/data';\nimport Image from 'next/image';\nimport { ObjectCategory } from './RightPanel';\nimport {\n  Apple,\n  Component,\n  PlayCircle,\n  PlusCircle,\n  Trees,\n  Waves,\n  CheckCircle2,\n  Sailboat,\n} from 'lucide-react';\n\nconst SIZABLE_CATEGORIES: ObjectCategory[] = ['fruits', 'stones', 'water', 'trees', 'finish', 'extra'];\nconst SINGULAR_RUSSIAN_MAP: Partial<Record<ObjectCategory, string>> = {\n    fruits: 'фрукт',\n    stones: 'камень',\n    trees: 'дерево',\n    finish: 'финиш',\n    extra: 'экстра',\n    water: 'объект',\n};\nconst SINGULAR_ENGLISH_MAP: Partial<Record<ObjectCategory, string>> = {\n    fruits: 'fruit',\n    stones: 'stone',\n    trees: 'tree',\n    finish: 'finish',\n    extra: 'extra',\n    water: 'water',\n};\n\nconst iconMap: Record<string, React.ElementType> = {\n  islands: Sailboat,\n  start: PlayCircle,\n  fruits: Apple,\n  stones: Component,\n  water: Waves,\n  trees: Trees,\n  finish: CheckCircle2,\n  extra: PlusCircle,\n};\n\nexport type LeftPanelContent = 'islands' | 'settings' | 'levels' | ObjectCategory | null;\n\ninterface LeftPanelProps {\n  content: LeftPanelContent;\n  setContent: (content: LeftPanelContent) => void;\n  levels: Levels;\n  currentLevelName: string;\n  loadLevel: (name: string) => void;\n  onCreateLevel: () => void;\n  canvasSize: { width: number; height: number };\n  setCanvasSize: (size: { width: number; height: number }) => void;\n  placingObject: PlacingObject | null;\n  setPlacingObject: (obj: PlacingObject | null) => void;\n  fruitDimensions: Record<string, { width: number; height: number }>;\n  onFruitDimensionChange: (name: string, size: { width: number; height: number }) => void;\n  stoneDimensions: Record<string, { width: number; height: number }>;\n  onStoneDimensionChange: (name: string, size: { width: number; height: number }) => void;\n  waterDimensions: Record<string, { width: number; height: number }>;\n  onWaterDimensionChange: (name: string, size: { width: number; height: number }) => void;\n  treeDimensions: Record<string, { width: number; height: number }>;\n  onTreeDimensionChange: (name: string, size: { width: number; height: number }) => void;\n  finishDimensions: Record<string, { width: number; height: number }>;\n  onFinishDimensionChange: (name: string, size: { width: number; height: number }) => void;\n  extraDimensions: Record<string, { width: number; height: number }>;\n  onExtraDimensionChange: (name: string, size: { width: number; height: number }) => void;\n}\n\nconst LeftPanel: React.FC<LeftPanelProps> = ({\n  content,\n  setContent,\n  levels,\n  currentLevelName,\n  loadLevel,\n  onCreateLevel,\n  canvasSize,\n  setCanvasSize,\n  placingObject,\n  setPlacingObject,\n  fruitDimensions,\n  onFruitDimensionChange,\n  stoneDimensions,\n  onStoneDimensionChange,\n  waterDimensions,\n  onWaterDimensionChange,\n  treeDimensions,\n  onTreeDimensionChange,\n  finishDimensions,\n  onFinishDimensionChange,\n  extraDimensions,\n  onExtraDimensionChange,\n}) => {\n  const [selectedCategory, setSelectedCategory] = useState<ObjectCategory | null>('islands');\n  const [selectedItemForSizing, setSelectedItemForSizing] = useState<string | null>(null);\n  const [keepAspectRatio, setKeepAspectRatio] = useState(true);\n  const [itemSize, setItemSize] = useState<{ width: number; height: number }>({ width: 0, height: 0 });\n\n  useEffect(() => {\n    setSelectedItemForSizing(null);\n  }, [selectedCategory]);\n\n  const handleItemClick = (item: { name: string; image: string }) => {\n    if (placingObject?.name === item.name) {\n      setPlacingObject(null);\n      setSelectedItemForSizing(null);\n    } else {\n      const img = new window.Image();\n      img.src = item.image;\n      img.onload = () => {\n        let width, height;\n        const isFruit = selectedCategory === 'fruits';\n        const isStone = selectedCategory === 'stones';\n        const isWater = selectedCategory === 'water';\n        const isTree = selectedCategory === 'trees';\n        const isFinish = selectedCategory === 'finish';\n        const isExtra = selectedCategory === 'extra';\n        \n        let dimensions = fruitDimensions;\n        if (isStone) dimensions = stoneDimensions;\n        if (isWater) dimensions = waterDimensions;\n        if (isTree) dimensions = treeDimensions;\n        if (isFinish) dimensions = finishDimensions;\n        if (isExtra) dimensions = extraDimensions;\n\n        const savedDim = dimensions[item.name];\n\n        if ((isFruit || isStone || isWater || isTree || isFinish || isExtra) && savedDim) {\n          width = savedDim.width;\n          height = savedDim.height;\n        } else if (isFruit || isStone || isWater || isTree || isFinish || isExtra) {\n          width = 64;\n          height = 64;\n        } else {\n          const MAX_DIM = 128;\n          const scale = Math.min(1, MAX_DIM / img.naturalWidth, MAX_DIM / img.naturalHeight);\n          width = img.naturalWidth * scale;\n          height = img.naturalHeight * scale;\n        }\n\n        setPlacingObject({\n          ...item,\n          width,\n          height,\n          originalWidth: img.naturalWidth,\n          originalHeight: img.naturalHeight,\n        } as PlacingObject);\n\n        if (isFruit || isStone || isWater || isTree || isFinish || isExtra) {\n          setSelectedItemForSizing(item.name);\n          setItemSize({ width, height });\n        } else {\n          setSelectedItemForSizing(null);\n        }\n      };\n    }\n  };\n\n  const handleSizeChange = (key: 'width' | 'height', value: string | number) => {\n    const numValue = Number(value);\n    if (!isNaN(numValue) && numValue > 0) {\n      setCanvasSize({ ...canvasSize, [key]: numValue });\n    }\n  };\n\n  const handleDimensionChange = (\n    key: 'width' | 'height',\n    value: string | number,\n    category: 'fruits' | 'stones' | 'water' | 'trees' | 'finish' | 'extra'\n  ) => {\n    const numValue = Number(value);\n    if (selectedItemForSizing && !isNaN(numValue) && numValue > 0) {\n      if (keepAspectRatio) {\n        const dimensions = { fruitDimensions, stoneDimensions, waterDimensions, treeDimensions, finishDimensions, extraDimensions };\n        const dimKey = `${category}Dimensions` as keyof typeof dimensions;\n        const originalDim = dimensions[dimKey][selectedItemForSizing];\n        const ratio = originalDim ? originalDim.width / originalDim.height : 1;\n\n        if (key === 'width') {\n          setItemSize({ width: numValue, height: Math.round(numValue / ratio) });\n        } else {\n          setItemSize({ width: Math.round(numValue * ratio), height: numValue });\n        }\n      } else {\n        setItemSize((prev) => ({ ...prev, [key]: numValue }));\n      }\n    }\n  };\n\n  const handleDimensionSave = () => {\n    if (!selectedItemForSizing || !selectedCategory) return;\n\n    switch (selectedCategory) {\n      case 'fruits':\n        onFruitDimensionChange(selectedItemForSizing, itemSize);\n        break;\n      case 'stones':\n        onStoneDimensionChange(selectedItemForSizing, itemSize);\n        break;\n      case 'water':\n        onWaterDimensionChange(selectedItemForSizing, itemSize);\n        break;\n      case 'trees':\n        onTreeDimensionChange(selectedItemForSizing, itemSize);\n        break;\n      case 'finish':\n        onFinishDimensionChange(selectedItemForSizing, itemSize);\n        break;\n      case 'extra':\n        onExtraDimensionChange(selectedItemForSizing, itemSize);\n        break;\n    }\n\n    if (placingObject) {\n      setPlacingObject({\n        ...placingObject,\n        width: itemSize.width,\n        height: itemSize.height,\n      });\n    }\n  };\n\n  const renderContent = () => {\n    if (content === 'levels') {\n      return (\n        <div className=\"p-4\">\n          <h2 className=\"text-xl font-bold mb-4\">Уровни</h2>\n          <div className=\"flex flex-col gap-2\">\n            {Object.keys(levels).map((name) => (\n              <button\n                key={name}\n                className={`btn ${name === currentLevelName ? 'btn-primary' : 'btn-ghost'}`}\n                onClick={() => loadLevel(name)}\n              >\n                {name}\n              </button>\n            ))}\n          </div>\n          <button \n            className=\"btn btn-outline btn-sm mt-4 w-full\" \n            onClick={onCreateLevel}\n          >\n            <PlusCircle className=\"h-4 w-4 mr-2\" />\n            Создать уровень\n          </button>\n        </div>\n      );\n    }\n\n    if (content === 'settings') {\n      return (\n        <div className=\"p-4\">\n          <h2 className=\"text-xl font-bold mb-4\">Настройки</h2>\n          <div className=\"form-control w-full\">\n            <label className=\"label\">\n              <span className=\"label-text\">Ширина карты (пикс.)</span>\n            </label>\n            <input\n              className=\"input input-bordered w-full\"\n              type=\"number\"\n              value={canvasSize.width}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleSizeChange('width', e.target.value)}\n              min={100}\n              step={50}\n            />\n          </div>\n          <div className=\"form-control w-full mt-2\">\n            <label className=\"label\">\n              <span className=\"label-text\">Высота карты (пикс.)</span>\n            </label>\n            <input\n              className=\"input input-bordered w-full\"\n              type=\"number\"\n              value={canvasSize.height}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleSizeChange('height', e.target.value)}\n              min={100}\n              step={50}\n            />\n          </div>\n        </div>\n      );\n    }\n\n    // Категории объектов\n    const categoryEntries = Object.entries(objectCategories) as [ObjectCategory, string][];\n    const categories = categoryEntries.map(([id, name]) => ({\n      id,\n      name,\n      icon: iconMap[id],\n    }));\n\n    return (\n      <div>\n        <div className=\"p-2 bg-base-200\">\n          <h2 className=\"text-lg font-medium mb-2\">Категории объектов</h2>\n          <div className=\"flex flex-wrap gap-1\">\n            {categories.map((category) => (\n              <button\n                key={category.id}\n                className={`btn btn-sm ${content === category.id ? 'btn-primary' : 'btn-outline'}`}\n                onClick={() => setContent(category.id)}\n              >\n                {category.name}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"p-4\">\n          <h2 className=\"text-xl font-bold mb-4\">{\n            content === 'islands' ? 'Остров' :\n            content === 'start' ? 'Старт' :\n            content === 'fruits' ? 'Фрукты' :\n            content === 'stones' ? 'Камни' :\n            content === 'water' ? 'Вода' :\n            content === 'trees' ? 'Деревья' :\n            content === 'finish' ? 'Финиш' :\n            'Экстра'\n          }</h2>\n\n          {content && (\n            <div className=\"grid grid-cols-3 gap-2\">\n              {data[content]?.map((item, index) => (\n                <div \n                  key={`${item.name}-${index}`}\n                  className={`flex flex-col items-center p-2 rounded-lg cursor-pointer transition-all border ${placingObject?.name === item.name ? 'border-primary bg-primary/20' : 'border-base-300 hover:bg-base-200'}`}\n                  onClick={() => handleItemClick(item)}\n                >\n                  <div className=\"relative w-16 h-16 flex items-center justify-center\">\n                    <Image\n                      src={item.image}\n                      alt={item.name}\n                      width={64}\n                      height={64}\n                      className=\"object-contain max-h-16\"\n                    />\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n\n          {selectedItemForSizing && SIZABLE_CATEGORIES.includes(content as ObjectCategory) && (\n            <div className=\"mt-4 p-3 border border-base-300 rounded-lg bg-base-100\">\n              <h3 className=\"font-medium mb-2\">Настройка размера</h3>\n              \n              <div className=\"form-control w-full\">\n                <label className=\"label\">\n                  <span className=\"label-text\">Ширина (пикс.)</span>\n                </label>\n                <input\n                  className=\"input input-bordered w-full\"\n                  type=\"number\"\n                  value={Math.round(itemSize.width)}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleDimensionChange('width', e.target.value, content as any)}\n                  min={1}\n                />\n              </div>\n              \n              <div className=\"form-control w-full mt-2\">\n                <label className=\"label\">\n                  <span className=\"label-text\">Высота (пикс.)</span>\n                </label>\n                <input\n                  className=\"input input-bordered w-full\"\n                  type=\"number\"\n                  value={Math.round(itemSize.height)}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleDimensionChange('height', e.target.value, content as any)}\n                  min={1}\n                />\n              </div>\n              \n              <div className=\"form-control mt-2\">\n                <label className=\"label cursor-pointer\">\n                  <span className=\"label-text\">Сохранять пропорции</span>\n                  <input\n                    type=\"checkbox\"\n                    className=\"toggle toggle-primary\"\n                    checked={keepAspectRatio}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => setKeepAspectRatio(e.target.checked)}\n                  />\n                </label>\n              </div>\n              \n              <button\n                className=\"btn btn-primary btn-sm mt-3 w-full\"\n                onClick={handleDimensionSave}\n              >\n                Сохранить размер\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"h-full flex flex-col border-r bg-base-100\">\n      <div className=\"overflow-auto\">\n        {renderContent()}\n      </div>\n    </div>\n  );\n};\n\nexport default LeftPanel;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 890, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 906, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"btn\",\n  {\n    variants: {\n      variant: {\n        default: \"btn-primary\",\n        destructive: \"btn-error\",\n        outline: \"btn-outline\",\n        secondary: \"btn-secondary\",\n        ghost: \"btn-ghost\",\n        link: \"btn-link\",\n      },\n      size: {\n        default: \"btn-md\",\n        sm: \"btn-sm\",\n        lg: \"btn-lg\",\n        icon: \"btn-square\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,OACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;YACb,SAAS;YACT,WAAW;YACX,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 966, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/ObjectTree.tsx"],"sourcesContent":["import React from 'react';\nimport { MapObject } from '@/app/page';\nimport { Button } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\n\ninterface ObjectTreeProps {\n  objects: MapObject[];\n  onSelectObject: (object: MapObject) => void;\n  selectedObject: MapObject | null;\n}\n\nconst ObjectTree: React.FC<ObjectTreeProps> = ({ objects, onSelectObject, selectedObject }) => {\n  const buildTree = (items: MapObject[]): MapObject[] => {\n    const itemMap = new Map<string, MapObject>();\n    items.forEach(item => {\n      itemMap.set(item.id, { ...item, children: [] });\n    });\n\n    const tree: MapObject[] = [];\n    items.forEach(item => {\n      if (item.parentId && itemMap.has(item.parentId)) {\n        const parent = itemMap.get(item.parentId);\n        parent?.children?.push(itemMap.get(item.id)!);\n      } else {\n        tree.push(itemMap.get(item.id)!);\n      }\n    });\n\n    return tree;\n  };\n\n  const objectTree = buildTree(objects);\n\n  const renderTree = (nodes: MapObject[]) => (\n    <div className=\"pl-4\">\n      {nodes.map(node => (\n        <div key={node.id}>\n          <Button\n            variant=\"ghost\"\n            onClick={() => onSelectObject(node)}\n            className={cn(\n              'w-full justify-start px-2 py-1 h-auto',\n              selectedObject?.id === node.id && 'bg-accent text-accent-foreground'\n            )}\n          >\n            <span className=\"text-sm\">{node.name}</span>\n          </Button>\n          {node.children && node.children.length > 0 && renderTree(node.children)}\n        </div>\n      ))}\n    </div>\n  );\n\n  return (\n    <div>\n      {renderTree(objectTree)}\n    </div>\n  );\n};\n\nexport default ObjectTree; "],"names":[],"mappings":";;;;AAEA;AACA;;;;AAQA,MAAM,aAAwC,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE;IACxF,MAAM,YAAY,CAAC;QACjB,MAAM,UAAU,IAAI;QACpB,MAAM,OAAO,CAAC,CAAA;YACZ,QAAQ,GAAG,CAAC,KAAK,EAAE,EAAE;gBAAE,GAAG,IAAI;gBAAE,UAAU,EAAE;YAAC;QAC/C;QAEA,MAAM,OAAoB,EAAE;QAC5B,MAAM,OAAO,CAAC,CAAA;YACZ,IAAI,KAAK,QAAQ,IAAI,QAAQ,GAAG,CAAC,KAAK,QAAQ,GAAG;gBAC/C,MAAM,SAAS,QAAQ,GAAG,CAAC,KAAK,QAAQ;gBACxC,QAAQ,UAAU,KAAK,QAAQ,GAAG,CAAC,KAAK,EAAE;YAC5C,OAAO;gBACL,KAAK,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,EAAE;YAC/B;QACF;QAEA,OAAO;IACT;IAEA,MAAM,aAAa,UAAU;IAE7B,MAAM,aAAa,CAAC,sBAClB,8OAAC;YAAI,WAAU;sBACZ,MAAM,GAAG,CAAC,CAAA,qBACT,8OAAC;;sCACC,8OAAC,kIAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,SAAS,IAAM,eAAe;4BAC9B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yCACA,gBAAgB,OAAO,KAAK,EAAE,IAAI;sCAGpC,cAAA,8OAAC;gCAAK,WAAU;0CAAW,KAAK,IAAI;;;;;;;;;;;wBAErC,KAAK,QAAQ,IAAI,KAAK,QAAQ,CAAC,MAAM,GAAG,KAAK,WAAW,KAAK,QAAQ;;mBAX9D,KAAK,EAAE;;;;;;;;;;IAiBvB,qBACE,8OAAC;kBACE,WAAW;;;;;;AAGlB;uCAEe","debugId":null}},
    {"offset": {"line": 1044, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/components/RightPanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { MapObject } from '@/app/page';\nimport { Trash2, Lock, Unlock } from 'lucide-react';\nimport ObjectTree from './ObjectTree';\n\nexport type ObjectCategory = 'islands' | 'start' | 'fruits' | 'stones' | 'water' | 'trees' | 'finish' | 'extra';\n\ninterface RightPanelProps {\n  mapObjects: MapObject[];\n  selectedObject: MapObject | null;\n  onSelectObject: (object: MapObject) => void;\n  onUpdateObject: (updatedObject: MapObject) => void;\n  onDeleteObject: (id: string) => void;\n  leftPanelContent: 'islands' | 'settings' | 'levels' | ObjectCategory | null;\n  canvasSize: { width: number; height: number };\n  setCanvasSize: (size: { width: number; height: number }) => void;\n  keepAspectRatio: boolean;\n  setKeepAspectRatio: (value: boolean) => void;\n}\n\nconst RightPanel: React.FC<RightPanelProps> = ({\n  mapObjects,\n  selectedObject,\n  onSelectObject,\n  onUpdateObject,\n  onDeleteObject,\n  leftPanelContent,\n  canvasSize,\n  setCanvasSize,\n  keepAspectRatio,\n  setKeepAspectRatio,\n}) => {\n  const [view, setView] = useState<'properties' | 'tree'>('properties');\n\n  const handleInputChange = (id: string, value: any) => {\n    if (!selectedObject) return;\n\n    let newObject: MapObject = { ...selectedObject, [id]: value };\n\n    if (keepAspectRatio) {\n      if (id === 'width' && selectedObject.originalWidth && selectedObject.originalHeight) {\n        const aspectRatio = selectedObject.originalHeight / selectedObject.originalWidth;\n        newObject.height = Number(value) * aspectRatio;\n      } else if (id === 'height' && selectedObject.originalWidth && selectedObject.originalHeight) {\n        const aspectRatio = selectedObject.originalWidth / selectedObject.originalHeight;\n        newObject.width = Number(value) * aspectRatio;\n      } else if (id === 'widthPercent' && selectedObject.originalWidth && selectedObject.originalHeight) {\n        newObject.height = selectedObject.originalHeight * (Number(value) / 100);\n      } else if (id === 'heightPercent' && selectedObject.originalWidth && selectedObject.originalHeight) {\n        newObject.width = selectedObject.originalWidth * (Number(value) / 100);\n      }\n    }\n\n    if (id === 'widthPercent' && selectedObject.originalWidth) {\n      newObject.width = selectedObject.originalWidth * (Number(value) / 100);\n    } else if (id === 'heightPercent' && selectedObject.originalHeight) {\n      newObject.height = selectedObject.originalHeight * (Number(value) / 100);\n    }\n    \n    onUpdateObject(newObject);\n  };\n\n  const handleCanvasSizeChange = (id: 'width' | 'height', value: number | string) => {\n    const newSize = {\n      ...canvasSize,\n      [id]: Number(value) || 0,\n    };\n    setCanvasSize(newSize);\n  };\n\n  if (leftPanelContent === 'levels') {\n    return (\n      <div className=\"card bg-base-100 shadow-xl m-4\">\n        <div className=\"card-body\">\n          <h2 className=\"card-title\">Размеры уровня</h2>\n          <div className=\"form-control w-full\">\n            <label className=\"label\">\n              <span className=\"label-text\">Ширина (пикс.)</span>\n            </label>\n            <input\n              type=\"number\"\n              className=\"input input-bordered w-full\"\n              value={canvasSize.width}\n              onChange={(e) => handleCanvasSizeChange('width', e.target.value)}\n              min={100}\n            />\n          </div>\n          <div className=\"form-control w-full\">\n            <label className=\"label\">\n              <span className=\"label-text\">Высота (пикс.)</span>\n            </label>\n            <input\n              type=\"number\"\n              className=\"input input-bordered w-full\"\n              value={canvasSize.height}\n              onChange={(e) => handleCanvasSizeChange('height', e.target.value)}\n              min={100}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-4 h-full flex flex-col\">\n      <div className=\"tabs tabs-boxed w-full mb-4\">\n        <a \n          className={`tab ${view === 'properties' ? 'tab-active' : ''}`}\n          onClick={() => setView('properties')}\n        >\n          Свойства\n        </a>\n        <a \n          className={`tab ${view === 'tree' ? 'tab-active' : ''}`}\n          onClick={() => setView('tree')}\n        >\n          Дерево\n        </a>\n      </div>\n      \n      {view === 'tree' && (\n        <div className=\"card bg-base-100 shadow-xl h-full\">\n          <div className=\"card-body\">\n            <h2 className=\"card-title\">\n              Дерево объектов\n              <div className=\"badge badge-secondary\">{mapObjects.length}</div>\n            </h2>\n            <div className=\"overflow-y-auto h-[calc(100vh-300px)]\">\n              <ObjectTree objects={mapObjects} onSelectObject={onSelectObject} selectedObject={selectedObject} />\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {view === 'properties' && (\n        <div className=\"card bg-base-100 shadow-xl h-full\">\n          <div className=\"card-body\">\n            <h2 className=\"card-title flex justify-between items-center\">\n              Свойства объекта\n              {selectedObject && (\n                <div className=\"flex items-center gap-2\">\n                  <button \n                    className=\"btn btn-sm btn-ghost\"\n                    onClick={() => onUpdateObject({ ...selectedObject, isLocked: !selectedObject.isLocked })}\n                  >\n                    {selectedObject.isLocked ? <Lock className=\"h-4 w-4\" /> : <Unlock className=\"h-4 w-4\" />}\n                  </button>\n                  <button \n                    className=\"btn btn-sm btn-error\"\n                    onClick={() => onDeleteObject(selectedObject.id)}\n                  >\n                    <Trash2 className=\"h-4 w-4\" />\n                  </button>\n                </div>\n              )}\n            </h2>\n            \n            {!selectedObject ? (\n              <div className=\"text-center py-8\">\n                <p className=\"text-base-content opacity-70\">Объект не выбран</p>\n                <p className=\"text-sm text-base-content opacity-50 mt-2\">\n                  Выберите объект на карте для редактирования его свойств\n                </p>\n              </div>\n            ) : (\n              <div className=\"overflow-y-auto h-[calc(100vh-400px)]\">\n                <div className=\"space-y-4\">\n                  <div className=\"form-control w-full\">\n                    <label className=\"label\">\n                      <span className=\"label-text\">Имя</span>\n                    </label>\n                    <input\n                      className=\"input input-bordered w-full\"\n                      value={selectedObject.name}\n                      onChange={(event) => onUpdateObject({ ...selectedObject, name: event.currentTarget.value })}\n                    />\n                  </div>\n                  <div className=\"form-control w-full\">\n                    <label className=\"label\">\n                      <span className=\"label-text\">Ширина (пикс.)</span>\n                    </label>\n                    <input\n                      className=\"input input-bordered w-full\"\n                      type=\"number\"\n                      value={Math.round(selectedObject.width)}\n                      onChange={(e) => handleInputChange('width', e.target.value)}\n                      min={1}\n                    />\n                  </div>\n                  <div className=\"form-control w-full\">\n                    <label className=\"label\">\n                      <span className=\"label-text\">Высота (пикс.)</span>\n                    </label>\n                    <input\n                      className=\"input input-bordered w-full\"\n                      type=\"number\"\n                      value={Math.round(selectedObject.height)}\n                      onChange={(e) => handleInputChange('height', e.target.value)}\n                      min={1}\n                    />\n                  </div>\n                  {selectedObject.originalWidth && (\n                    <div className=\"form-control w-full\">\n                      <label className=\"label\">\n                        <span className=\"label-text\">Ширина (%)</span>\n                      </label>\n                      <input\n                        className=\"input input-bordered w-full\"\n                        type=\"number\"\n                        value={Math.round((selectedObject.width / selectedObject.originalWidth) * 100)}\n                        onChange={(e) => handleInputChange('widthPercent', e.target.value)}\n                        min={1}\n                      />\n                    </div>\n                  )}\n                  {selectedObject.originalHeight && (\n                    <div className=\"form-control w-full\">\n                      <label className=\"label\">\n                        <span className=\"label-text\">Высота (%)</span>\n                      </label>\n                      <input\n                        className=\"input input-bordered w-full\"\n                        type=\"number\"\n                        value={Math.round((selectedObject.height / selectedObject.originalHeight) * 100)}\n                        onChange={(e) => handleInputChange('heightPercent', e.target.value)}\n                        min={1}\n                      />\n                    </div>\n                  )}\n                  <div className=\"form-control\">\n                    <label className=\"label cursor-pointer\">\n                      <span className=\"label-text\">Сохранять пропорции</span>\n                      <input\n                        type=\"checkbox\"\n                        className=\"toggle toggle-primary\"\n                        checked={keepAspectRatio}\n                        onChange={(e) => setKeepAspectRatio(e.target.checked)}\n                      />\n                    </label>\n                  </div>\n                  <div className=\"form-control w-full\">\n                    <label className=\"label\">\n                      <span className=\"label-text\">X координата</span>\n                    </label>\n                    <input\n                      className=\"input input-bordered w-full\"\n                      type=\"number\"\n                      value={Math.round(selectedObject.x)}\n                      onChange={(e) => handleInputChange('x', Number(e.target.value))}\n                    />\n                  </div>\n                  <div className=\"form-control w-full\">\n                    <label className=\"label\">\n                      <span className=\"label-text\">Y координата</span>\n                    </label>\n                    <input\n                      className=\"input input-bordered w-full\"\n                      type=\"number\"\n                      value={Math.round(selectedObject.y)}\n                      onChange={(e) => handleInputChange('y', Number(e.target.value))}\n                    />\n                  </div>\n                  <div className=\"form-control\">\n                    <label className=\"label cursor-pointer\">\n                      <span className=\"label-text\">Отразить по горизонтали</span>\n                      <input\n                        type=\"checkbox\"\n                        className=\"toggle toggle-primary\"\n                        checked={selectedObject.flipX}\n                        onChange={(e) => onUpdateObject({ ...selectedObject, flipX: e.target.checked })}\n                      />\n                    </label>\n                  </div>\n                  <div className=\"form-control\">\n                    <label className=\"label cursor-pointer\">\n                      <span className=\"label-text\">Отразить по вертикали</span>\n                      <input\n                        type=\"checkbox\"\n                        className=\"toggle toggle-primary\"\n                        checked={selectedObject.flipY}\n                        onChange={(e) => onUpdateObject({ ...selectedObject, flipY: e.target.checked })}\n                      />\n                    </label>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RightPanel;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1756, "column": 0}, "map": {"version":3,"sources":["file:///Users/pavelpetakov/%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B/MazeGenerator2/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, useRef } from 'react';\nimport Toolbar from '@/components/Toolbar';\nimport LeftPanel from '@/components/LeftPanel';\nimport RightPanel, { ObjectCategory } from '@/components/RightPanel';\nimport dynamic from 'next/dynamic';\nimport { toast } from \"sonner\"\n\nconst Canvas = dynamic(() => import('@/components/Canvas'), {\n  ssr: false,\n  loading: () => <div className=\"flex-grow flex justify-center items-center bg-gray-100\"><p>Loading Canvas...</p></div>\n});\n\nexport interface MapObject {\n  id: string;\n  name: string;\n  image: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  originalWidth?: number;\n  originalHeight?: number;\n  flipX: boolean;\n  flipY: boolean;\n  isLocked: boolean;\n  parentId?: string;\n  children?: MapObject[];\n}\n\nexport interface PlacingObject {\n  name: string;\n  image: string;\n  width: number;\n  height: number;\n  originalWidth: number;\n  originalHeight: number;\n}\n\nexport type Tool = 'pointer' | 'placing' | 'map';\n\nexport interface Levels {\n  [key: string]: {\n    objects: MapObject[];\n    dimensions: { width: number, height: number };\n  }\n}\n\nexport default function Home() {\n  const [levels, setLevels] = useState<Levels>({});\n  const [currentLevelName, setCurrentLevelName] = useState('');\n  const [mapObjects, setMapObjects] = useState<MapObject[]>([]);\n  const [selectedObject, setSelectedObject] = useState<MapObject | null>(null);\n  const [activeTool, setActiveTool] = useState<Tool>('pointer');\n  const [leftPanelContent, setLeftPanelContent] = useState<ObjectCategory | \"levels\" | \"settings\" | \"islands\" | null>('islands');\n  const [placingObject, setPlacingObject] = useState<PlacingObject | null>(null);\n  const [keepAspectRatio, setKeepAspectRatio] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  \n  const [isRightPanelVisible, setIsRightPanelVisible] = useState(true);\n  const [rightPanelWidth, setRightPanelWidth] = useState(350);\n\n  const [canvasSize, setCanvasSize] = useState({ width: 800, height: 600 });\n  const canvasContainerRef = useRef<HTMLDivElement>(null);\n\n  const [fruitDimensions, setFruitDimensions] = useState<Record<string, { width: number; height: number }>>({});\n  const [stoneDimensions, setStoneDimensions] = useState<Record<string, { width: number; height: number }>>({});\n  const [waterDimensions, setWaterDimensions] = useState<Record<string, { width: number; height: number }>>({});\n  const [treeDimensions, setTreeDimensions] = useState<Record<string, { width: number; height: number }>>({});\n  const [finishDimensions, setFinishDimensions] = useState<Record<string, { width: number; height: number }>>({});\n  const [extraDimensions, setExtraDimensions] = useState<Record<string, { width: number; height: number }>>({});\n\n  const fetchLevels = async () => {\n    const response = await fetch('/api/levels');\n    const data = await response.json();\n    setLevels(data);\n    return data;\n  };\n\n  useEffect(() => {\n    const initLevels = async () => {\n      const data = await fetchLevels();\n      const levelNames = Object.keys(data);\n      const lastOpened = localStorage.getItem('maze-editor-last-level-name');\n      if (lastOpened && data[lastOpened]) {\n        loadLevel(lastOpened, data);\n      } else if (levelNames.length > 0) {\n        loadLevel(levelNames[0], data);\n      }\n    };\n    initLevels();\n  }, []);\n\n  useEffect(() => {\n    if (activeTool === 'map') {\n      setLeftPanelContent('levels');\n    } else if (activeTool === 'pointer' && leftPanelContent === 'levels') {\n      setLeftPanelContent('islands');\n    }\n  }, [activeTool]);\n\n  useEffect(() => {\n    const savedFruitDimensions = localStorage.getItem('fruit-dimensions');\n    if (savedFruitDimensions) setFruitDimensions(JSON.parse(savedFruitDimensions));\n    const savedStoneDimensions = localStorage.getItem('stone-dimensions');\n    if (savedStoneDimensions) setStoneDimensions(JSON.parse(savedStoneDimensions));\n    const savedWaterDimensions = localStorage.getItem('water-dimensions');\n    if (savedWaterDimensions) setWaterDimensions(JSON.parse(savedWaterDimensions));\n    const savedTreeDimensions = localStorage.getItem('tree-dimensions');\n    if (savedTreeDimensions) setTreeDimensions(JSON.parse(savedTreeDimensions));\n    const savedFinishDimensions = localStorage.getItem('finish-dimensions');\n    if (savedFinishDimensions) setFinishDimensions(JSON.parse(savedFinishDimensions));\n    const savedExtraDimensions = localStorage.getItem('extra-dimensions');\n    if (savedExtraDimensions) setExtraDimensions(JSON.parse(savedExtraDimensions));\n  }, []);\n\n  useEffect(() => {\n    if (placingObject) {\n      setActiveTool('placing');\n    } else if (activeTool === 'placing') {\n      setActiveTool('pointer');\n    }\n  }, [placingObject]);\n\n  const handleSetFruitDimension = (name: string, size: { width: number; height: number }) => {\n    const newDimensions = { ...fruitDimensions, [name]: size };\n    setFruitDimensions(newDimensions);\n    localStorage.setItem('fruit-dimensions', JSON.stringify(newDimensions));\n  };\n\n  const handleSetStoneDimension = (name: string, size: { width: number; height: number }) => {\n    const newDimensions = { ...stoneDimensions, [name]: size };\n    setStoneDimensions(newDimensions);\n    localStorage.setItem('stone-dimensions', JSON.stringify(newDimensions));\n  };\n\n  const handleSetWaterDimension = (name: string, size: { width: number; height: number }) => {\n    const newDimensions = { ...waterDimensions, [name]: size };\n    setWaterDimensions(newDimensions);\n    localStorage.setItem('water-dimensions', JSON.stringify(newDimensions));\n  };\n\n  const handleSetTreeDimension = (name: string, size: { width: number; height: number }) => {\n    const newDimensions = { ...treeDimensions, [name]: size };\n    setTreeDimensions(newDimensions);\n    localStorage.setItem('tree-dimensions', JSON.stringify(newDimensions));\n  };\n\n  const handleSetFinishDimension = (name: string, size: { width: number; height: number }) => {\n    const newDimensions = { ...finishDimensions, [name]: size };\n    setFinishDimensions(newDimensions);\n    localStorage.setItem('finish-dimensions', JSON.stringify(newDimensions));\n  };\n\n  const handleSetExtraDimension = (name: string, size: { width: number; height: number }) => {\n    const newDimensions = { ...extraDimensions, [name]: size };\n    setExtraDimensions(newDimensions);\n    localStorage.setItem('extra-dimensions', JSON.stringify(newDimensions));\n  };\n\n  const loadLevel = (name: string, allLevels: Levels) => {\n    const levelData = allLevels[name];\n    if (levelData) {\n      setMapObjects(levelData.objects || []);\n      setCanvasSize(levelData.dimensions || { width: 800, height: 600 });\n      setCurrentLevelName(name);\n      setSelectedObject(null);\n      localStorage.setItem('maze-editor-last-level-name', name);\n    }\n  };\n\n  const handleCreateLevel = async () => {\n    const name = prompt(`Введите имя нового уровня:`, `Уровень ${Object.keys(levels).length + 1}`);\n    if (name) {\n        if (levels[name]) {\n            alert('Уровень с таким именем уже существует.');\n            return;\n        }\n        \n        const newLevelData = {\n            objects: [],\n            dimensions: { width: 800, height: 600 }\n        };\n\n        try {\n            await fetch('/api/save-level', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ name, data: newLevelData })\n            });\n            const updatedLevels = await fetchLevels();\n            loadLevel(name, updatedLevels);\n        } catch (error) {\n            console.error('Ошибка при создании уровня:', error);\n            alert(`Не удалось создать уровень: ${error}`);\n        }\n    }\n  };\n\n  const handleToolSelect = (tool: Tool) => {\n    if (tool === 'pointer') {\n      setPlacingObject(null);\n    }\n    setActiveTool(tool);\n  };\n\n  const handleSaveLevel = async () => {\n    if (!currentLevelName) {\n        toast.error('Ошибка', {\n          description: 'Не выбран уровень для сохранения.',\n        });\n        return;\n    }\n    setIsSaving(true);\n    const levelData = {\n        objects: mapObjects,\n        dimensions: canvasSize\n    };\n    try {\n        await fetch('/api/save-level', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ name: currentLevelName, data: levelData })\n        });\n        toast.success('Сохранено', {\n            description: `Уровень \"${currentLevelName}\" успешно сохранен.`,\n        });\n    } catch (error) {\n        console.error('Ошибка при сохранении уровня:', error);\n        toast.error('Ошибка сохранения', {\n            description: `Не удалось сохранить уровень: ${error}`,\n        });\n    } finally {\n      setIsSaving(false);\n    }\n    setSelectedObject(null);\n  };\n\n  const handleUpdateObject = (updatedAttrs: Partial<MapObject>) => {\n    if (!updatedAttrs.id) return;\n    const newMapObjects = mapObjects.map(obj => {\n      if (obj.id === updatedAttrs.id) {\n        return { ...obj, ...updatedAttrs };\n      }\n      return obj;\n    });\n    setMapObjects(newMapObjects);\n\n    if (selectedObject && selectedObject.id === updatedAttrs.id) {\n      setSelectedObject(prev => ({ ...prev!, ...updatedAttrs }));\n    }\n  };\n\n  const handleDeleteObject = (id: string) => {\n    setMapObjects(mapObjects.filter(obj => obj.id !== id));\n    setSelectedObject(null);\n  };\n\n  const handleToggleRightPanel = () => {\n    setIsRightPanelVisible(!isRightPanelVisible);\n  };\n\n  const handleResetRightPanel = () => {\n    setRightPanelWidth(350);\n    setIsRightPanelVisible(true);\n  };\n\n  const handleResizeMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const startX = e.clientX;\n    const startWidth = rightPanelWidth;\n\n    const handleMouseMove = (e: MouseEvent) => {\n      const newWidth = startWidth - (e.clientX - startX);\n      if (newWidth >= 250 && newWidth <= 600) {\n        setRightPanelWidth(newWidth);\n      }\n    };\n\n    const handleMouseUp = () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  return (\n    <div className=\"flex h-screen bg-gray-200\">\n      <div className=\"flex flex-col flex-grow\">\n        <Toolbar \n          activeTool={activeTool}\n          onToolSelect={handleToolSelect}\n          onSave={handleSaveLevel}\n          isSaving={isSaving}\n          isRightPanelVisible={isRightPanelVisible}\n          onToggleRightPanel={handleToggleRightPanel}\n          onResetRightPanel={handleResetRightPanel}\n        />\n        <div className=\"flex flex-grow overflow-hidden\">\n          <div className=\"w-[300px] bg-white dark:bg-zinc-950 border-r border-gray-300 dark:border-zinc-800 flex-shrink-0 flex flex-col\">\n            <LeftPanel\n              content={leftPanelContent}\n              setContent={setLeftPanelContent}\n              levels={levels}\n              currentLevelName={currentLevelName}\n              loadLevel={(name: string) => loadLevel(name, levels)}\n              onCreateLevel={handleCreateLevel}\n              canvasSize={canvasSize}\n              setCanvasSize={setCanvasSize}\n              placingObject={placingObject}\n              setPlacingObject={setPlacingObject}\n              fruitDimensions={fruitDimensions}\n              onFruitDimensionChange={handleSetFruitDimension}\n              stoneDimensions={stoneDimensions}\n              onStoneDimensionChange={handleSetStoneDimension}\n              waterDimensions={waterDimensions}\n              onWaterDimensionChange={handleSetWaterDimension}\n              treeDimensions={treeDimensions}\n              onTreeDimensionChange={handleSetTreeDimension}\n              finishDimensions={finishDimensions}\n              onFinishDimensionChange={handleSetFinishDimension}\n              extraDimensions={extraDimensions}\n              onExtraDimensionChange={handleSetExtraDimension}\n            />\n          </div>\n          <div ref={canvasContainerRef} className=\"flex-grow flex justify-center items-center bg-gray-100 relative overflow-auto min-w-0\">\n            <Canvas\n              mapObjects={mapObjects}\n              setMapObjects={setMapObjects}\n              selectedObject={selectedObject}\n              setSelectedObject={setSelectedObject}\n              canvasSize={canvasSize}\n              placingObject={placingObject}\n              setPlacingObject={setPlacingObject}\n              keepAspectRatio={keepAspectRatio}\n              onUpdateObject={handleUpdateObject}\n            />\n          </div>\n          \n          {isRightPanelVisible && (\n            <div\n              className=\"relative bg-white dark:bg-zinc-950 border-l-2 border-gray-300 dark:border-zinc-700 flex-shrink-0 shadow-lg\"\n              style={{ width: rightPanelWidth, minWidth: '250px', maxWidth: '600px' }}\n            >\n              <div \n                className=\"absolute top-0 bottom-0 -left-1 w-2 bg-blue-500 hover:bg-blue-600 cursor-col-resize z-10 opacity-50 hover:opacity-100 transition-opacity\"\n                onMouseDown={handleResizeMouseDown}\n                title=\"Перетащите для изменения размера панели\"\n              />\n              <RightPanel\n                mapObjects={mapObjects}\n                selectedObject={selectedObject}\n                onSelectObject={(obj: MapObject) => setSelectedObject(obj)}\n                onUpdateObject={handleUpdateObject}\n                onDeleteObject={handleDeleteObject}\n                leftPanelContent={leftPanelContent}\n                canvasSize={canvasSize}\n                setCanvasSize={setCanvasSize}\n                keepAspectRatio={keepAspectRatio}\n                setKeepAspectRatio={setKeepAspectRatio}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAPA;;;;;;;;AASA,MAAM,SAAS,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD;;;;;;IACnB,KAAK;IACL,SAAS,kBAAM,8OAAC;YAAI,WAAU;sBAAyD,cAAA,8OAAC;0BAAE;;;;;;;;;;;;AAsC7E,SAAS;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,CAAC;IAC9C,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe,EAAE;IAC5D,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoB;IACvE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAQ;IACnD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA6D;IACpH,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAwB;IACzE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/D,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,OAAO;QAAK,QAAQ;IAAI;IACvE,MAAM,qBAAqB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAElD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqD,CAAC;IAC3G,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqD,CAAC;IAC3G,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqD,CAAC;IAC3G,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqD,CAAC;IACzG,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqD,CAAC;IAC7G,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqD,CAAC;IAE3G,MAAM,cAAc;QAClB,MAAM,WAAW,MAAM,MAAM;QAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,UAAU;QACV,OAAO;IACT;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa;YACjB,MAAM,OAAO,MAAM;YACnB,MAAM,aAAa,OAAO,IAAI,CAAC;YAC/B,MAAM,aAAa,aAAa,OAAO,CAAC;YACxC,IAAI,cAAc,IAAI,CAAC,WAAW,EAAE;gBAClC,UAAU,YAAY;YACxB,OAAO,IAAI,WAAW,MAAM,GAAG,GAAG;gBAChC,UAAU,UAAU,CAAC,EAAE,EAAE;YAC3B;QACF;QACA;IACF,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,eAAe,OAAO;YACxB,oBAAoB;QACtB,OAAO,IAAI,eAAe,aAAa,qBAAqB,UAAU;YACpE,oBAAoB;QACtB;IACF,GAAG;QAAC;KAAW;IAEf,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,uBAAuB,aAAa,OAAO,CAAC;QAClD,IAAI,sBAAsB,mBAAmB,KAAK,KAAK,CAAC;QACxD,MAAM,uBAAuB,aAAa,OAAO,CAAC;QAClD,IAAI,sBAAsB,mBAAmB,KAAK,KAAK,CAAC;QACxD,MAAM,uBAAuB,aAAa,OAAO,CAAC;QAClD,IAAI,sBAAsB,mBAAmB,KAAK,KAAK,CAAC;QACxD,MAAM,sBAAsB,aAAa,OAAO,CAAC;QACjD,IAAI,qBAAqB,kBAAkB,KAAK,KAAK,CAAC;QACtD,MAAM,wBAAwB,aAAa,OAAO,CAAC;QACnD,IAAI,uBAAuB,oBAAoB,KAAK,KAAK,CAAC;QAC1D,MAAM,uBAAuB,aAAa,OAAO,CAAC;QAClD,IAAI,sBAAsB,mBAAmB,KAAK,KAAK,CAAC;IAC1D,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,eAAe;YACjB,cAAc;QAChB,OAAO,IAAI,eAAe,WAAW;YACnC,cAAc;QAChB;IACF,GAAG;QAAC;KAAc;IAElB,MAAM,0BAA0B,CAAC,MAAc;QAC7C,MAAM,gBAAgB;YAAE,GAAG,eAAe;YAAE,CAAC,KAAK,EAAE;QAAK;QACzD,mBAAmB;QACnB,aAAa,OAAO,CAAC,oBAAoB,KAAK,SAAS,CAAC;IAC1D;IAEA,MAAM,0BAA0B,CAAC,MAAc;QAC7C,MAAM,gBAAgB;YAAE,GAAG,eAAe;YAAE,CAAC,KAAK,EAAE;QAAK;QACzD,mBAAmB;QACnB,aAAa,OAAO,CAAC,oBAAoB,KAAK,SAAS,CAAC;IAC1D;IAEA,MAAM,0BAA0B,CAAC,MAAc;QAC7C,MAAM,gBAAgB;YAAE,GAAG,eAAe;YAAE,CAAC,KAAK,EAAE;QAAK;QACzD,mBAAmB;QACnB,aAAa,OAAO,CAAC,oBAAoB,KAAK,SAAS,CAAC;IAC1D;IAEA,MAAM,yBAAyB,CAAC,MAAc;QAC5C,MAAM,gBAAgB;YAAE,GAAG,cAAc;YAAE,CAAC,KAAK,EAAE;QAAK;QACxD,kBAAkB;QAClB,aAAa,OAAO,CAAC,mBAAmB,KAAK,SAAS,CAAC;IACzD;IAEA,MAAM,2BAA2B,CAAC,MAAc;QAC9C,MAAM,gBAAgB;YAAE,GAAG,gBAAgB;YAAE,CAAC,KAAK,EAAE;QAAK;QAC1D,oBAAoB;QACpB,aAAa,OAAO,CAAC,qBAAqB,KAAK,SAAS,CAAC;IAC3D;IAEA,MAAM,0BAA0B,CAAC,MAAc;QAC7C,MAAM,gBAAgB;YAAE,GAAG,eAAe;YAAE,CAAC,KAAK,EAAE;QAAK;QACzD,mBAAmB;QACnB,aAAa,OAAO,CAAC,oBAAoB,KAAK,SAAS,CAAC;IAC1D;IAEA,MAAM,YAAY,CAAC,MAAc;QAC/B,MAAM,YAAY,SAAS,CAAC,KAAK;QACjC,IAAI,WAAW;YACb,cAAc,UAAU,OAAO,IAAI,EAAE;YACrC,cAAc,UAAU,UAAU,IAAI;gBAAE,OAAO;gBAAK,QAAQ;YAAI;YAChE,oBAAoB;YACpB,kBAAkB;YAClB,aAAa,OAAO,CAAC,+BAA+B;QACtD;IACF;IAEA,MAAM,oBAAoB;QACxB,MAAM,OAAO,OAAO,CAAC,0BAA0B,CAAC,EAAE,CAAC,QAAQ,EAAE,OAAO,IAAI,CAAC,QAAQ,MAAM,GAAG,GAAG;QAC7F,IAAI,MAAM;YACN,IAAI,MAAM,CAAC,KAAK,EAAE;gBACd,MAAM;gBACN;YACJ;YAEA,MAAM,eAAe;gBACjB,SAAS,EAAE;gBACX,YAAY;oBAAE,OAAO;oBAAK,QAAQ;gBAAI;YAC1C;YAEA,IAAI;gBACA,MAAM,MAAM,mBAAmB;oBAC3B,QAAQ;oBACR,SAAS;wBAAE,gBAAgB;oBAAmB;oBAC9C,MAAM,KAAK,SAAS,CAAC;wBAAE;wBAAM,MAAM;oBAAa;gBACpD;gBACA,MAAM,gBAAgB,MAAM;gBAC5B,UAAU,MAAM;YACpB,EAAE,OAAO,OAAO;gBACZ,QAAQ,KAAK,CAAC,+BAA+B;gBAC7C,MAAM,CAAC,4BAA4B,EAAE,OAAO;YAChD;QACJ;IACF;IAEA,MAAM,mBAAmB,CAAC;QACxB,IAAI,SAAS,WAAW;YACtB,iBAAiB;QACnB;QACA,cAAc;IAChB;IAEA,MAAM,kBAAkB;QACtB,IAAI,CAAC,kBAAkB;YACnB,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC,UAAU;gBACpB,aAAa;YACf;YACA;QACJ;QACA,YAAY;QACZ,MAAM,YAAY;YACd,SAAS;YACT,YAAY;QAChB;QACA,IAAI;YACA,MAAM,MAAM,mBAAmB;gBAC3B,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE,MAAM;oBAAkB,MAAM;gBAAU;YACnE;YACA,wIAAA,CAAA,QAAK,CAAC,OAAO,CAAC,aAAa;gBACvB,aAAa,CAAC,SAAS,EAAE,iBAAiB,mBAAmB,CAAC;YAClE;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,iCAAiC;YAC/C,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC,qBAAqB;gBAC7B,aAAa,CAAC,8BAA8B,EAAE,OAAO;YACzD;QACJ,SAAU;YACR,YAAY;QACd;QACA,kBAAkB;IACpB;IAEA,MAAM,qBAAqB,CAAC;QAC1B,IAAI,CAAC,aAAa,EAAE,EAAE;QACtB,MAAM,gBAAgB,WAAW,GAAG,CAAC,CAAA;YACnC,IAAI,IAAI,EAAE,KAAK,aAAa,EAAE,EAAE;gBAC9B,OAAO;oBAAE,GAAG,GAAG;oBAAE,GAAG,YAAY;gBAAC;YACnC;YACA,OAAO;QACT;QACA,cAAc;QAEd,IAAI,kBAAkB,eAAe,EAAE,KAAK,aAAa,EAAE,EAAE;YAC3D,kBAAkB,CAAA,OAAQ,CAAC;oBAAE,GAAG,IAAI;oBAAG,GAAG,YAAY;gBAAC,CAAC;QAC1D;IACF;IAEA,MAAM,qBAAqB,CAAC;QAC1B,cAAc,WAAW,MAAM,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;QAClD,kBAAkB;IACpB;IAEA,MAAM,yBAAyB;QAC7B,uBAAuB,CAAC;IAC1B;IAEA,MAAM,wBAAwB;QAC5B,mBAAmB;QACnB,uBAAuB;IACzB;IAEA,MAAM,wBAAwB,CAAC;QAC7B,EAAE,cAAc;QAChB,MAAM,SAAS,EAAE,OAAO;QACxB,MAAM,aAAa;QAEnB,MAAM,kBAAkB,CAAC;YACvB,MAAM,WAAW,aAAa,CAAC,EAAE,OAAO,GAAG,MAAM;YACjD,IAAI,YAAY,OAAO,YAAY,KAAK;gBACtC,mBAAmB;YACrB;QACF;QAEA,MAAM,gBAAgB;YACpB,SAAS,mBAAmB,CAAC,aAAa;YAC1C,SAAS,mBAAmB,CAAC,WAAW;QAC1C;QAEA,SAAS,gBAAgB,CAAC,aAAa;QACvC,SAAS,gBAAgB,CAAC,WAAW;IACvC;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,6HAAA,CAAA,UAAO;oBACN,YAAY;oBACZ,cAAc;oBACd,QAAQ;oBACR,UAAU;oBACV,qBAAqB;oBACrB,oBAAoB;oBACpB,mBAAmB;;;;;;8BAErB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,+HAAA,CAAA,UAAS;gCACR,SAAS;gCACT,YAAY;gCACZ,QAAQ;gCACR,kBAAkB;gCAClB,WAAW,CAAC,OAAiB,UAAU,MAAM;gCAC7C,eAAe;gCACf,YAAY;gCACZ,eAAe;gCACf,eAAe;gCACf,kBAAkB;gCAClB,iBAAiB;gCACjB,wBAAwB;gCACxB,iBAAiB;gCACjB,wBAAwB;gCACxB,iBAAiB;gCACjB,wBAAwB;gCACxB,gBAAgB;gCAChB,uBAAuB;gCACvB,kBAAkB;gCAClB,yBAAyB;gCACzB,iBAAiB;gCACjB,wBAAwB;;;;;;;;;;;sCAG5B,8OAAC;4BAAI,KAAK;4BAAoB,WAAU;sCACtC,cAAA,8OAAC;gCACC,YAAY;gCACZ,eAAe;gCACf,gBAAgB;gCAChB,mBAAmB;gCACnB,YAAY;gCACZ,eAAe;gCACf,kBAAkB;gCAClB,iBAAiB;gCACjB,gBAAgB;;;;;;;;;;;wBAInB,qCACC,8OAAC;4BACC,WAAU;4BACV,OAAO;gCAAE,OAAO;gCAAiB,UAAU;gCAAS,UAAU;4BAAQ;;8CAEtE,8OAAC;oCACC,WAAU;oCACV,aAAa;oCACb,OAAM;;;;;;8CAER,8OAAC,gIAAA,CAAA,UAAU;oCACT,YAAY;oCACZ,gBAAgB;oCAChB,gBAAgB,CAAC,MAAmB,kBAAkB;oCACtD,gBAAgB;oCAChB,gBAAgB;oCAChB,kBAAkB;oCAClB,YAAY;oCACZ,eAAe;oCACf,iBAAiB;oCACjB,oBAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQpC","debugId":null}}]
}